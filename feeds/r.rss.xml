<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wilson Freitas</title><link>http://wilsonfreitas.github.io/</link><description></description><atom:link href="http://wilsonfreitas.github.io/feeds/r.rss.xml" rel="self"></atom:link><lastBuildDate>Fri, 02 Oct 2015 00:00:00 -0300</lastBuildDate><item><title>Webscraping IPCA</title><link>http://wilsonfreitas.github.io/posts/webscraping-ipca.html</link><description>&lt;p&gt;Frequentemente eu consumo dados disponíveis na Internet para construir &lt;em&gt;datasets&lt;/em&gt; em minhas análises.
Em sua maioria são dados de mercado financeiro, que incluem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;indicadores econômicos&lt;/li&gt;
&lt;li&gt;índices de inflação&lt;/li&gt;
&lt;li&gt;taxas de juros&lt;/li&gt;
&lt;li&gt;preços de ações&lt;/li&gt;
&lt;li&gt;preços de contratos futuros&lt;/li&gt;
&lt;li&gt;dados cadastrais de instrumentos financeiros negociados na BM&amp;amp;FBovespa&lt;/li&gt;
&lt;li&gt;taxas e preços de títulos públicos&lt;/li&gt;
&lt;li&gt;entre outros&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Decidi apresentar formas automáticas de obter estes dados e este post é o primeiro da série &lt;a href="/category/webscraping.html"&gt;webscraping&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Vou começar com IPCA porque venho trabalhando muito com ele recentemente de forma que criamos uma relação.&lt;/p&gt;
&lt;p&gt;Eu capturo a série IPCA do site &lt;a href="http://portalbrasil.net"&gt;PortalBrasil&lt;/a&gt; no link
http://www.portalbrasil.net/ipca.htm.
Para fazer o webscraping eu usei o &lt;a href="https://github.com/hadley/rvest"&gt;rvest&lt;/a&gt;.
No código abaixo eu leio a URL, seleciono a tabela com o IPCA mensal e converto em um &lt;code&gt;data.frame&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rvest&lt;span class="p"&gt;)&lt;/span&gt;
url &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://www.portalbrasil.net/ipca.htm&amp;#39;&lt;/span&gt;
ipca_data &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read_html&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  html_nodes&lt;span class="p"&gt;(&lt;/span&gt;xpath&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  html_table&lt;span class="p"&gt;(&lt;/span&gt;header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ipca_data&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##          JAN   FEV   MAR  ABR  MAI   JUN   JUL   AGO   SET   OUT   NOV   DEZ ACUMULADO\n          NO ANO 
## 1 1980  6,62  4,62  6,04 5,29 5,70  5,31  5,55  4,95  4,23  9,48  6,67  6,61                       99,27%
## 2 1981  6,84  6,40  4,97 6,46 5,56  5,52  6,26  5,50  5,26  5,08  5,27  5,93                       95,65%
## 3 1982  6,97  6,64  5,71 5,89 6,66  7,10  6,36  5,97  5,08  4,44  5,29  7,81                      104,80%
## 4 1983  8,64  7,86  7,34 6,58 6,48  9,88 10,08  9,11 10,30  8,87  7,38  8,68                      163,99%
## 5 1984  9,67  9,50  8,94 9,54 9,05 10,08  9,72  9,35 11,75 10,44 10,53 11,98                      215,27%
## 6 1985 11,76 10,87 10,16 8,20 7,20  8,49 10,31 12,05 11,12 10,62 13,97 15,07                      242,24%
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Alguns pontos escondidos nas linhas de código acima:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;da página carregada a informação que eu queria estava na sexta tabela da página, como eu sabia disso? Não sou adivinho, imprimi tabala a tabela até chegar a que eu desejava.&lt;/li&gt;
&lt;li&gt;eu prefiro usar &lt;code&gt;xpath&lt;/code&gt; para especificar os elementos de interesse. Nem sempre isso é possível, eventualmente o HTML não está bem formatado e os parsers não funcionam direito. Nestes casos bibliotecas como BeautifulSoup do python são mais eficazes.&lt;/li&gt;
&lt;li&gt;eu utilizo a operação &lt;code&gt;.[[1]]&lt;/code&gt; após selecionar a tabela, porque? O &lt;code&gt;html_nodes&lt;/code&gt; retorno uma lista com 1 elemento e tenho que extrair esse elemento da lista para trabalhar com ele.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;html_table&lt;/code&gt; converte a tabela em HTML em um &lt;code&gt;data.frame&lt;/code&gt; que eu chamo de &lt;code&gt;ipca_data&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;code&gt;data.frame&lt;/code&gt; &lt;code&gt;ipca_data&lt;/code&gt; tem alguns problemas de formato:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;os nomes das colunas devem ser formatados, em particular a primeira que está sem nome.&lt;/li&gt;
&lt;li&gt;as colunas estão como texto e devem ser convertidas para decimal&lt;/li&gt;
&lt;li&gt;a última coluna vai exigir um esforço adicional na conversão&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vamos limpar os dados extraindo apenas os números que interessam.
Eu uso uma expressão regular onde especifico um decimal separado (ou não) por vírgula e capturo em um grupo.
Em seguida eu troco &lt;code&gt;,&lt;/code&gt; por &lt;code&gt;.&lt;/code&gt; e depois converto para &lt;code&gt;numeric&lt;/code&gt;.
Note que eu uso &lt;code&gt;suppressWarnings&lt;/code&gt; porque alguns valores não são convertidos e geram &lt;code&gt;NA&lt;/code&gt; e eu não quero as mensagens de aviso na saída.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="m"&gt;.&lt;/span&gt;d &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ipca_data&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;.&lt;/span&gt;data &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ipca_data&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;d&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class="o"&gt;::&lt;/span&gt;str_replace&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;^[^0-9]*(\\d+(\\.\\d+)?(,\\d+)?)[^0-9]*$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;\\1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class="o"&gt;::&lt;/span&gt;str_replace&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;\\.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; stringr&lt;span class="o"&gt;::&lt;/span&gt;str_replace&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;suppressWarnings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt;
  x
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;.data&lt;/code&gt; é uma lista com as colunas do &lt;code&gt;data.frame&lt;/code&gt; contendo todos os números formatados.
Agora vou converte-lo novamente em um &lt;code&gt;data.frame&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="m"&gt;.&lt;/span&gt;data &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;do.call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;data&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ainda é necessário corrigir os nomes.
Vou renomear todas as colunas, pois prefiro trabalhar com os meses em formato numérico e separar a primeira coluna do ano e a última da inflação acumulada no ano.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;data&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ano&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;acumulado&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;.&lt;/span&gt;data
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##     ano     1     2     3     4     5     6     7     8     9    10    11    12 acumulado
## 1  1980  6,62  4,62  6,04  5,29  5,70  5,31  5,55  4,95  4,23  9,48  6,67  6,61     99,27
## 2  1981  6,84  6,40  4,97  6,46  5,56  5,52  6,26  5,50  5,26  5,08  5,27  5,93     95,65
## 3  1982  6,97  6,64  5,71  5,89  6,66  7,10  6,36  5,97  5,08  4,44  5,29  7,81    104,80
## 4  1983  8,64  7,86  7,34  6,58  6,48  9,88 10,08  9,11 10,30  8,87  7,38  8,68    163,99
## 5  1984  9,67  9,50  8,94  9,54  9,05 10,08  9,72  9,35 11,75 10,44 10,53 11,98    215,27
## 6  1985 11,76 10,87 10,16  8,20  7,20  8,49 10,31 12,05 11,12 10,62 13,97 15,07    242,24
## 7  1986 14,37 12,72  4,77  0,78  1,40  1,27  1,71  3,55  1,72  1,90  5,45 11,65     79,65
## 8  1987 13,21 12,64 16,37 19,10 21,45 19,71  9,21  4,87  7,78 11,22 15,08 14,15    363,41
## 9  1988 18,89 15,70 17,60 19,29 17,42 22,00 21,91 21,59 27,45 25,62 27,94 28,70    980,22
## 10 1989 37,49 16,78  6,82  8,33 17,92 28,65 27,74 33,71 37,56 39,77 47,82 51,50   1972,91
## 11 1990 67,55 75,73 82,39 15,52  7,59 11,75 12,92 12,88 14,41 14,36 16,81 18,44   1620,96
## 12 1991 20,75 20,72 11,92  4,99  7,43 11,19 12,41 15,63 15,63 20,23 25,21 23,71    472,69
## 13 1992 25,94 24,32 21,40 19,93 24,86 20,21 21,83 22,14 24,63 25,24 22,49 25,24   1119,09
## 14 1993 30,35 24,98 27,26 27,75 27,69 30,07 30,72 32,96 35,69 33,92 35,56 36,84   2477,15
## 15 1994 41,31 40,27 42,75 42,68 44,03 47,43  6,84  1,86  1,53  2,62  2,81  1,71    916,43
## 16 1995  1,70  1,02  1,55  2,43  2,67  2,26  2,36  0,99  0,99  1,41  1,47  1,56     22,41
## 17 1996  1,34  1,03  0,35  1,26  1,22  1,19  1,11  0,44  0,15  0,30  0,32  0,47      9,56
## 18 1997  1,18  0,50  0,51  0,88  0,41  0,54  0,22  0,02  0,06  0,23  0,17  0,43      5,22
## 19 1998  0,71  0,46  0,34  0,24  0,50  0,02  0,12  0,51  0,22  0,02  0,12  0,33      1,66
## 20 1999  0,70  1,05  1,10  0,56  0,30  0,19  1,09  0,56  0,31  1,19  0,95  0,60      8,94
## 21 2000  0,62  0,13  0,22  0,42  0,01  0,23  1,61  1,31  0,23  0,14  0,32  0,59      5,97
## 22 2001  0,57  0,46  0,38  0,58  0,41  0,52  1,33  0,70  0,28  0,83  0,71  0,65      7,67
## 23 2002  0,52  0,36  0,60  0,80  0,21  0,42  1,19  0,65  0,72  1,31  3,02  2,10     12,53
## 24 2003  2,25  1,57  1,23  0,97  0,61  0,15  0,20  0,34  0,78  0,29  0,34  0,52      9,30
## 25 2004  0,76  0,61  0,47  0,37  0,51  0,71  0,91  0,69  0,33  0,44  0,69  0,86      7,60
## 26 2005  0,58  0,59  0,61  0,87  0,49  0,02  0,25  0,17  0,35  0,75  0,55  0,36      5,69
## 27 2006  0,59  0,41  0,43  0,21  0,10  0,21  0,19  0,05  0,21  0,33  0,31  0,48      3,14
## 28 2007  0,44  0,44  0,37  0,25  0,28  0,28  0,24  0,47  0,18  0,30  0,38  0,74      4,45
## 29 2008  0,54  0,49  0,48  0,55  0,79  0,74  0,53  0,28  0,26  0,45  0,36  0,28      5,90
## 30 2009  0,48  0,55  0,20  0,48  0,47  0,36  0,24  0,15  0,24  0,28  0,41  0,37      4,31
## 31 2010  0,75  0,78  0,52  0,57  0,43  0,00  0,01  0,04  0,45  0,75  0,83  0,63      5,90
## 32 2011  0,83  0,80  0,79  0,77  0,47  0,15  0,16  0,37  0,53  0,43  0,52  0,50      6,50
## 33 2012  0,56  0,45  0,21  0,64  0,36  0,08  0,43  0,41  0,57  0,59  0,60  0,79      5,83
## 34 2013  0,86  0,60  0,47  0,55  0,37  0,26  0,03  0,24  0,35  0,57  0,54  0,92      5,91
## 35 2014  0,55  0,69  0,92  0,67  0,46  0,40  0,01  0,25  0,57  0,42  0,51  0,78      6,40
## 36 2015  1,24  1,22  1,32  0,71  0,74  0,79  0,62  0,22  0,54    NA    NA    NA      7,64
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Eu diria que aqui termina o trabalho de webscraping, no entanto, os dados não estão em um formato adequado para trabalhar.
Um formato que eu considero interessante é o de uma série temporal onde cada inflação é representada por um par data (mês e ano) e valor.
Neste contexto a coluna &lt;code&gt;acumulado&lt;/code&gt; é ignorada e por isso vamos começar removendo-a&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="m"&gt;.&lt;/span&gt;data &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; select&lt;span class="o"&gt;=-&lt;/span&gt;acumulado&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora vou transformar os dados.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="m"&gt;.&lt;/span&gt;data &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;within&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;reshape2&lt;span class="o"&gt;::&lt;/span&gt;melt&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; id&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ano&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  variable &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;variable&lt;span class="p"&gt;)&lt;/span&gt;
  mes &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; variable&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sep&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="kp"&gt;rm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; variable&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esse comando faz diversas coisas e retorna um &lt;code&gt;data.frame&lt;/code&gt; com a &lt;em&gt;pattern&lt;/em&gt; data-valor, no entando as datas estão fora de ordem.
Para colocar os dados em ordem cronológica eu vou criar um objeto de série temporal.
Gosto do pacote &lt;code&gt;xts&lt;/code&gt; que cria objetos de séries de tempo com avançadas funcionalidades de indexação.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;xts&lt;span class="p"&gt;)&lt;/span&gt;
ipca &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; xts&lt;span class="p"&gt;(&lt;/span&gt;value&lt;span class="p"&gt;,&lt;/span&gt; mes&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ipca&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;IPCA&amp;#39;&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;ipca&lt;span class="p"&gt;,&lt;/span&gt; main&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;IPCA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk webscraping-ipca" src="http://wilsonfreitas.github.io/figure/webscraping-ipca-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;A inflação no governo Dilma Rousseff (2011-).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;plot&lt;span class="p"&gt;(&lt;/span&gt;ipca&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2011/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; type&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; main&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;IPCA - Governo Dilma Rousseff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk webscraping-ipca-dilma" src="http://wilsonfreitas.github.io/figure/webscraping-ipca-dilma-1.png" /&gt; &lt;/p&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Vimos como capturar a série temporal do IPCA do site PortalBrasil.
Há outras formas de obter a série do IPCA, para citar 2 temos o webservice do Banco Central e o Quandl.
No entanto a extração apresentada aqui trabalha dados brutos, o que pra mim é melhor porque eu tomo as decisões sobre a manipulação e interpretação dos dados.
Além disso utilizo apenas HTTP, preciso apenas que o site esteja no ar disponibilizando páginas estáticas, as outras alternativas são serviços onde é necessário uma API para obter os dados.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2015-10-02:posts/webscraping-ipca.html</guid><category>R</category><category>rvest</category></item><item><title>Nada é tão ruim que não possa piorar: Empenada na Curva de Juros de DI1 — Parte 2</title><link>http://wilsonfreitas.github.io/posts/nada-e-tao-ruim-que-nao-possa-piorar-empenada-na-curva-de-juros-de-di1-parte-2.html</link><description>&lt;p&gt;O mês de setembro de 2015 não está sendo fácil para o mercado financeiro.
Alta de dólar (rompeu a barreira de R$ 4,00 e segue sem rumo), disparada de juros, pacote bomba do governo, pacote fiscal nebuloso, volta da CPMF e por aí vai.
Mas no dia 23 de setembro de 2015 aconteceu algo interessante, após o nome do deputado Eduardo Cunha aparecer na lista de acusados da Operação Lava Jato, a curva de juros apresentou forte elevação.
Essa empenada é reflexo da incerteza que ronda a aprovação de medidas importantes para a economia e para o país, incluindo o corte de gastos e o ajuste fiscal.
Olhe no gráfico abaixo a curva de juros de DI1 para a semana do dia 21 de setembro.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; terms

dates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2015-09-21&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2015-09-25&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
curves &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dates&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    get_curve&lt;span class="p"&gt;(&lt;/span&gt;d&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PRE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;terms&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;curves&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; dates

ir_df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; stack&lt;span class="p"&gt;(&lt;/span&gt;curves&lt;span class="p"&gt;)&lt;/span&gt;
ir_df&lt;span class="o"&gt;$&lt;/span&gt;date &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; terms &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kp"&gt;Sys.Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;
ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;ir_df&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;values&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;ind&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_line&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  xlab&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Datas&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; ylab&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Taxas&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; theme&lt;span class="p"&gt;(&lt;/span&gt;legend.title&lt;span class="o"&gt;=&lt;/span&gt;element_blank&lt;span class="p"&gt;(),&lt;/span&gt; legend.position&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;top&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; ggtitle&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Curvas de DI1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Brazilian Term Structure" src="http://wilsonfreitas.github.io/figure/many-di1-term-structure-plot-2-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;Isso mesmo, em 3 dias a curva deu uma empenada de 1 ponto percentual (100 basis points (bps)) e depois retornou ao nível inicial no último dia da semana.
Esses movimentos do mercado, na minha opinião são muito difíceis de se explicar.
Em geral os analistas se prendem a algum fato, como as notícias do governo, ou criam um factóide, mas a verdade é que pode ser um grande &lt;em&gt;player&lt;/em&gt; manipulando o mercado de forma indireta.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;os códigos da função &lt;code&gt;get_curve&lt;/code&gt; estão no post &lt;a href="http://wilsonfreitas.github.io/posts/empenada-na-curva-de-juros-de-di1.html"&gt;Empenada na Curva de Juros de DI1&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Wed, 23 Sep 2015 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2015-09-23:posts/nada-e-tao-ruim-que-nao-possa-piorar-empenada-na-curva-de-juros-de-di1-parte-2.html</guid><category>R</category><category>bizdays</category><category>term structure</category><category>interpolation</category></item><item><title>Empenada na Curva de Juros de DI1</title><link>http://wilsonfreitas.github.io/posts/empenada-na-curva-de-juros-de-di1.html</link><description>&lt;p&gt;A curva de juros DI1, de depósitos interbancários de 1 dia, a curva mais negociada em nosso mercado, sofreu uma metamorfose nos últimos meses.
Saímos de uma expectativa de juros de longo prazo de 12% para quase 16%.
Quando falo juros de longo prazo me refiro aos contratos com vencimento a partir de 2020, com aproximadamente 5 anos de &lt;em&gt;duration&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Eu fiz o código abaixo para baixar curvas do site da &lt;a href="http://www.bmfbovespa.com.br/home.aspx?idioma=pt-br" title="BM&amp;amp;F Bovespa"&gt;BM&amp;amp;F Bovespa&lt;/a&gt; e vou usá-lo para baixar curvas de DI1 para diferentes datas deste ano de forma que seja possível obvervar a evolução dos juros.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;XML&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;bizdays&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;stringr&lt;span class="p"&gt;)&lt;/span&gt;

cal &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Calendar&lt;span class="p"&gt;(&lt;/span&gt;holidaysANBIMA&lt;span class="p"&gt;,&lt;/span&gt; weekdays&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;saturday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sunday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; dib&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ANBIMA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
bizdays.options&lt;span class="o"&gt;$&lt;/span&gt;set&lt;span class="p"&gt;(&lt;/span&gt;default.calendar&lt;span class="o"&gt;=&lt;/span&gt;cal&lt;span class="p"&gt;)&lt;/span&gt;

str_supplant &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;string&lt;span class="p"&gt;,&lt;/span&gt; repl&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    result &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; str_match_all&lt;span class="p"&gt;(&lt;/span&gt;string&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\\{([^{}]*)\\}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;result&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;string&lt;span class="p"&gt;)&lt;/span&gt;
    result &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; result&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="kp"&gt;seq_len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;result&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; result&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;,]&lt;/span&gt;
        pattern &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        key &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kp"&gt;is.null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;repl&lt;span class="p"&gt;[[&lt;/span&gt;key&lt;span class="p"&gt;]]))&lt;/span&gt;
            string &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pattern&lt;span class="p"&gt;,&lt;/span&gt; repl&lt;span class="p"&gt;[[&lt;/span&gt;key&lt;span class="p"&gt;]],&lt;/span&gt; string&lt;span class="p"&gt;,&lt;/span&gt; perl&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    string
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="m"&gt;.&lt;/span&gt;get_curve_url &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;,&lt;/span&gt; ticker&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    url &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://www2.bmf.com.br/pages/portal/bmfbovespa/boletim1/TxRef1.asp&amp;#39;&lt;/span&gt;
    query &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; str_supplant&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;?Data={refdate}&amp;amp;Data1={sysdate}&amp;amp;slcTaxa={ticker}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%d/%m/%Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            sysdate&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;Sys.Date&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%Y%m%d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            ticker&lt;span class="o"&gt;=&lt;/span&gt;ticker&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="kp"&gt;paste0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; query&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

get_curve &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;,&lt;/span&gt; ticker&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;PRE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    refdate &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;)&lt;/span&gt;
    url &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;get_curve_url&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;,&lt;/span&gt; ticker&lt;span class="p"&gt;)&lt;/span&gt;
    doc &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; htmlTreeParse&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; useInternalNodes&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    num &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; xpathSApply&lt;span class="p"&gt;(&lt;/span&gt;doc&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;//td[contains(@class, &amp;#39;tabelaConteudo&amp;#39;)]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;[\r\n \t]+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xmlValue&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)))&lt;/span&gt;
    num &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;num&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="p"&gt;)),&lt;/span&gt; USE.NAMES&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    colspan &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;xpathApply&lt;span class="p"&gt;(&lt;/span&gt;doc&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;//td[contains(@class, &amp;#39;tabelaTitulo&amp;#39;)]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  xmlAttrs &lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]][&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;colspan &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        terms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; num&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        rates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; num&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
        log_pu &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; rates&lt;span class="o"&gt;*&lt;/span&gt;terms&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;360&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        rate &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pu&lt;span class="p"&gt;,&lt;/span&gt; term&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;pu &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;360&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;term&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        terms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; bizdayse&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;,&lt;/span&gt; num&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        rates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; num&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
        log_pu &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; rates&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        rate &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pu&lt;span class="p"&gt;,&lt;/span&gt; term&lt;span class="p"&gt;)&lt;/span&gt; pu&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;term&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    log_price_interpolator &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; approxfun&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;,&lt;/span&gt; log_pu&lt;span class="p"&gt;,&lt;/span&gt; method&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;term&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        pu &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;log_price_interpolator&lt;span class="p"&gt;(&lt;/span&gt;term&lt;span class="p"&gt;))&lt;/span&gt;
        rate&lt;span class="p"&gt;(&lt;/span&gt;pu&lt;span class="p"&gt;,&lt;/span&gt; term&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Uma vez que este código foi &lt;em&gt;sourced&lt;/em&gt; basta executar a função &lt;code&gt;get_curve&lt;/code&gt; passando a data e a curva de interesse, no nosso caso a curva de interesse é a de DI1 que tem código &lt;code&gt;PRE&lt;/code&gt; (de juros pré-fixados).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;irbrl &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; get_curve&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2015-01-02&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PRE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
irbrl&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##  [1] 11,80000 12,04666 12,28111 12,46142 12,58328 12,66676 12,72591
##  [8] 12,77506 12,81516 12,85459 12,88258 12,91228
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vamos comparar as curvas para diferentes datas, e assim será possível observar a empenada que a curva deu no mês de setembro.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2520&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; terms

dates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2015-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2015-09-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2 months&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
dates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; adjust.next&lt;span class="p"&gt;(&lt;/span&gt;dates&lt;span class="p"&gt;)&lt;/span&gt;
curves &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dates&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    get_curve&lt;span class="p"&gt;(&lt;/span&gt;d&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PRE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;terms&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;curves&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; dates

ir_df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; stack&lt;span class="p"&gt;(&lt;/span&gt;curves&lt;span class="p"&gt;)&lt;/span&gt;
ir_df&lt;span class="o"&gt;$&lt;/span&gt;date &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; terms &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kp"&gt;Sys.Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;
ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;ir_df&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;values&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;ind&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_line&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  xlab&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Datas&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; ylab&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Taxas&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; theme&lt;span class="p"&gt;(&lt;/span&gt;legend.title&lt;span class="o"&gt;=&lt;/span&gt;element_blank&lt;span class="p"&gt;(),&lt;/span&gt; legend.position&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;top&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; ggtitle&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Curvas de DI1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Brazilian Term Structure" src="http://wilsonfreitas.github.io/figure/many-di1-term-structure-plot-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;Observe que de julho para setembro as taxas de longo prazo se elevaram em 2 pontos percentuais (200bps), o que para um prazo de 10 anos é uma variação significativa.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Fri, 18 Sep 2015 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2015-09-18:posts/empenada-na-curva-de-juros-de-di1.html</guid><category>R</category><category>bizdays</category><category>term structure</category><category>interpolation</category></item><item><title>Captura de dados da Corrida de São Silvestre com Python—Parte 2</title><link>http://wilsonfreitas.github.io/posts/captura-de-dados-da-corrida-de-sao-silvestre-com-python-parte-2.html</link><description>&lt;p&gt;No post &lt;a href="http://wilsonfreitas.github.io/posts/captura-de-dados-da-corrida-de-sao-silvestre-com-python-parte-1.html"&gt;Captura de dados da Corrida de São Silvestre com Python—Parte 1&lt;/a&gt; eu levanto uma questão: Como o clima influencia o desempenho dos corredores de rua?
Nesse post eu apresento como os dados dos campeões da corrida de São Silvestre foram capturados do site da corrida utilizando Python e em seguida transformados em um arquivos CSV.&lt;/p&gt;
&lt;p&gt;Agora vou mostrar como o arquivo CSV foi utilizado, como os dados foram limpos e como foram formatados para que eu tenha os tipos corretos para a análise dos dados.
Neste post eu uso R ao invés de Python, sem nenhuma razão específica.&lt;/p&gt;
&lt;h2&gt;Montando o ambiente&lt;/h2&gt;
&lt;p&gt;Para fazer esta análise eu carreguei os seguintes pacotes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dplyr&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tidyr&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lubridate&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O &lt;code&gt;ggplot2&lt;/code&gt; é para fazer gráficos, &lt;code&gt;dplyr&lt;/code&gt; e &lt;code&gt;tidyr&lt;/code&gt; para tratar os &lt;em&gt;datasets&lt;/em&gt; e &lt;code&gt;lubridate&lt;/code&gt; para manipulação de data e hora.
Pessoalmente acho o &lt;code&gt;dplyr&lt;/code&gt; excepcional para o manejo com os dados, ele impõe uma forma fluida de pensar nas colunas do &lt;em&gt;dataset&lt;/em&gt; como variáveis e a partir daí todo o processo de manipulação de dados se torna simples.&lt;/p&gt;
&lt;h2&gt;Carregando os dados&lt;/h2&gt;
&lt;p&gt;Vamos começar carregando o arquivo &lt;code&gt;saosilvestre.csv&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;RCurl&lt;span class="p"&gt;)&lt;/span&gt;
csv_file &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; getURL&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://raw.githubusercontent.com/wilsonfreitas/saosilvestre/master/saosilvestre.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;text&lt;span class="o"&gt;=&lt;/span&gt;csv_file&lt;span class="p"&gt;,&lt;/span&gt; header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; stringsAsFactor&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##                nome    pais corrida  ano  horario        tempo percurso
## 1      Dawit Admasu Etiópia      90 2014 09:00:00 00:45:04.000    15000
## 2  Ymer Wude Ayalew Etiópia      90 2013 08:40:00 00:50:43.000    15000
## 3     Edwin Kipsang  Quênia      89 2013 09:00:00 00:43:47.000    15000
## 4      Nancy Kipron  Quênia      89 2013 08:40:00 00:51:58.000    15000
## 5     Edwin Kipsang  Quênia      88 2012 09:00:00 00:44:05.000    15000
## 6 Maurine Kipchumba  Quênia      88 2012 08:40:00 00:51:42.000    15000
##                                                                    largada
## 1 Av. Paulista, próximo à Rua Ministro Rocha Azevedo (sentido Consolação).
## 2 Av. Paulista, próximo à Rua Ministro Rocha Azevedo (sentido Consolação).
## 3 Av. Paulista, próximo à Rua Ministro Rocha Azevedo (sentido Consolação).
## 4 Av. Paulista, próximo à Rua Ministro Rocha Azevedo (sentido Consolação).
## 5                                 Av. Paulista, próximo à Rua Frei Caneca.
## 6                                 Av. Paulista, próximo à Rua Frei Caneca.
##                                                               chegada
## 1 Av. Paulista, 900, em frente ao Edifício da Fundação Cásper Líbero.
## 2 Av. Paulista, 900, em frente ao Edifício da Fundação Cásper Líbero.
## 3 Av. Paulista, 900, em frente ao Edifício da Fundação Cásper Líbero.
## 4 Av. Paulista, 900, em frente ao Edifício da Fundação Cásper Líbero.
## 5 Av. Paulista, 900, em frente ao Edifício da Fundação Cásper Líbero.
## 6 Av. Paulista, 900, em frente ao Edifício da Fundação Cásper Líbero.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Eu não vou utilizar as colunas &lt;code&gt;largada&lt;/code&gt;, &lt;code&gt;chegada&lt;/code&gt; e &lt;code&gt;horario&lt;/code&gt; e como elas poluem a vizualização do &lt;em&gt;dataset&lt;/em&gt; eu decidi removê-las:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; select&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;largada&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;chegada&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;horario&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##                nome    pais corrida  ano        tempo percurso
## 1      Dawit Admasu Etiópia      90 2014 00:45:04.000    15000
## 2  Ymer Wude Ayalew Etiópia      90 2013 00:50:43.000    15000
## 3     Edwin Kipsang  Quênia      89 2013 00:43:47.000    15000
## 4      Nancy Kipron  Quênia      89 2013 00:51:58.000    15000
## 5     Edwin Kipsang  Quênia      88 2012 00:44:05.000    15000
## 6 Maurine Kipchumba  Quênia      88 2012 00:51:42.000    15000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Muito melhor!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Importante:&lt;/strong&gt; o operador &lt;code&gt;%&amp;gt;%&lt;/code&gt; é um &lt;em&gt;pipe&lt;/em&gt; e compõe as sucessivas chamadas de funções para transformações em um &lt;em&gt;dataset&lt;/em&gt;.
O retorno da primeira expressão é atribuído ao primeiro argumento da função na segunda expressão, e caso houvessem mais expressões esse comportamento se repetiria até encontrar a última expressão e retornar o seu resultado para o chamador.
Este operador, que é extensamente utilizado em conjunto com as funções do &lt;code&gt;dplyr&lt;/code&gt;, tem origem no pacote &lt;a href="https://github.com/smbache/magrittr"&gt;&lt;code&gt;magrittr&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Limpando e formatando os dados&lt;/h2&gt;
&lt;p&gt;Para ter o &lt;em&gt;dataset&lt;/em&gt; pronto para uso eu preciso formatar os dados e corrigir os erros.
No processo de análise eu encontrei alguns erros e como não será possível reproduzir este processo aqui eu vou listar os erros e apresentar as soluções.&lt;/p&gt;
&lt;h3&gt;Corrigindo o &lt;code&gt;ano&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;O &lt;code&gt;ano&lt;/code&gt; da corrida número 90 está errado.
Este erro pode ser observado olhando os dados, veja na listagem abaixo onde eu uso a função &lt;code&gt;filter&lt;/code&gt; do &lt;code&gt;dplyr&lt;/code&gt; para selecionar os registros em que a coluna &lt;code&gt;corrida&lt;/code&gt; é 90.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class="p"&gt;(&lt;/span&gt;corrida &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##               nome    pais corrida  ano        tempo percurso
## 1     Dawit Admasu Etiópia      90 2014 00:45:04.000    15000
## 2 Ymer Wude Ayalew Etiópia      90 2013 00:50:43.000    15000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para corrigir isso é necessário definir para 2014 o &lt;code&gt;ano&lt;/code&gt; dos registros que possuem &lt;code&gt;corrida&lt;/code&gt; igual a 90.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class="p"&gt;(&lt;/span&gt;ano&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;corrida &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ano&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Apenas para ter certeza vamos verificar os dados após a correção.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;##               nome    pais corrida  ano        tempo percurso
## 1     Dawit Admasu Etiópia      90 2014 00:45:04.000    15000
## 2 Ymer Wude Ayalew Etiópia      90 2014 00:50:43.000    15000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ótimo, &lt;code&gt;ano&lt;/code&gt; corrigido!&lt;/p&gt;
&lt;h3&gt;Corrigindo o &lt;code&gt;pais&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Na coluna &lt;code&gt;pais&lt;/code&gt; há registros mau preenchidos, alguns registros estão preenchidos errados e também há registros vazios.
Vou começar com os registros errados, eles estão preenchidos com um hífen &lt;code&gt;-&lt;/code&gt; e devem ser substituídos pelos países corretos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class="p"&gt;(&lt;/span&gt;pais &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##                        nome pais corrida  ano        tempo percurso
## 1 Marizete de Paula Rezende    -      78 2002 00:54:02.000    15000
## 2            Lydia Cheromei    -      76 2000 00:50:33.000    15000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O &lt;code&gt;pais&lt;/code&gt; do primeiro registro é Brasil e para o segundo é Quênia.
Para corrigir esse erro eu utilizo a função &lt;code&gt;grep&lt;/code&gt; para identificar os registros errados e substituir a coluna &lt;code&gt;pais&lt;/code&gt; pelos valores comentados, mas mantendo a ordem correta, que eu consigo saber observando a listagem acima.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;idx &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;grep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;^-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ss&lt;span class="o"&gt;$&lt;/span&gt;pais&lt;span class="p"&gt;)&lt;/span&gt;
ss&lt;span class="p"&gt;[&lt;/span&gt;idx&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pais&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Brasil&amp;#39;&lt;/span&gt;
ss&lt;span class="p"&gt;[&lt;/span&gt;idx&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pais&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Quênia&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Há também um registro com &lt;code&gt;pais&lt;/code&gt; vazio.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; filter&lt;span class="p"&gt;(&lt;/span&gt;pais &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##            nome pais corrida  ano        tempo percurso
## 1 Alfredo Gomes            1 1925 00:23:10.000     6200
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O &lt;code&gt;pais&lt;/code&gt; para este registro é Brasil e como é apenas 1 fica fácil corrigir com &lt;code&gt;dplyr::mutate&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class="p"&gt;(&lt;/span&gt;pais&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pais &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Brasil&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; pais&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pronto, &lt;code&gt;pais&lt;/code&gt; corrigido.&lt;/p&gt;
&lt;h3&gt;Corrigindo o &lt;code&gt;percurso&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Há 1 registro com erro na coluna &lt;code&gt;percurso&lt;/code&gt;, e esse foi &lt;em&gt;tricky&lt;/em&gt; para descobrir.
Fazendo o gráfico de percurso por ano posso observar que a partir da década de 90 os percursos se mantém constantes em 15 km.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;ss&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;percurso&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;(&lt;/span&gt;size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_line&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk ano-percurso" src="http://wilsonfreitas.github.io/figure/ano-percurso-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;Entretanto, logo após o ano 2000 há um ponto que caí vertiginosamente de 15 km para aproximadamente a metade.
Observando o gráfico vejo que há variações semelhantes, porém isso pode me levar a questionar os demais valores.
Por isso eu somente consegui identificar este erro quando criei a variável &lt;code&gt;pace&lt;/code&gt; que mede a quantidade de tempo que um corredor leva para percorrer 1 km.
Eu converto a variável &lt;code&gt;tempo&lt;/code&gt; que é um &lt;code&gt;character&lt;/code&gt; para &lt;code&gt;difftime&lt;/code&gt; que é um objeto que representa intervalos de tempo.
Pessoalmente acho &lt;code&gt;difftime&lt;/code&gt; um nome miserável de ruim, mas no R algumas coisas são assim mesmo, meio feias ;).
Depois dessa conversão eu consigo fazer as operações aritiméticas com &lt;code&gt;difftime&lt;/code&gt; necessárias para o cálculo do &lt;code&gt;pace&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class="p"&gt;(&lt;/span&gt;tempo&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.difftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tempo&lt;span class="p"&gt;),&lt;/span&gt; pace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;tempo&lt;span class="o"&gt;/&lt;/span&gt;percurso&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fazendo o gráfico do &lt;em&gt;pace&lt;/em&gt; dos campeões por corrida temos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;ss&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pace&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;(&lt;/span&gt;size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_line&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk ano-pace" src="http://wilsonfreitas.github.io/figure/ano-pace-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;Bingo! É possível notar que no mesmo ano que no gráfico anterior há um &lt;em&gt;outliar&lt;/em&gt;.
Os paces de campeões são abaixo de 4 min/km, em média, de forma que um pace de 6 min/km é implausível.
Para corrigir este registro vou assumir que ele é 15 km, como os demais em anos próximos.
Dessa forma, será necessário atualizar o &lt;code&gt;percurso&lt;/code&gt; e calcular novamente o &lt;code&gt;pace&lt;/code&gt;.
Para corrigir o percurso vou utilizar as operações de indexação no &lt;code&gt;data.frame&lt;/code&gt; junto com a função &lt;code&gt;which&lt;/code&gt; e para recalcular o pace eu utilizo a mesma expressão de antes (com &lt;code&gt;mutate&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="o"&gt;$&lt;/span&gt;pace &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),]&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;percurso &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;15000&lt;/span&gt;
ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class="p"&gt;(&lt;/span&gt;pace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;tempo&lt;span class="o"&gt;/&lt;/span&gt;percurso&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Gerando novamente o gráfico dos paces observo que o erro está corrigido.&lt;/p&gt;
&lt;p&gt;&lt;img alt="plot of chunk ano-pace-corrigido" src="http://wilsonfreitas.github.io/figure/ano-pace-corrigido-1.png" /&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Importante:&lt;/strong&gt; é necessário converter o &lt;code&gt;pace&lt;/code&gt;, que é um &lt;code&gt;difftime&lt;/code&gt;, para &lt;code&gt;numeric&lt;/code&gt; para construir o gráfico com ggplot2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Importante:&lt;/strong&gt; notei no gráfico dos paces que nos anos recentes há dois níveis distintos de pace. Isso refere-se aos paces masculino e feminino que vamos classificar em breve.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Classificando masculino e feminino: criando &lt;code&gt;sexo&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Como observei nos gráficos de pace, há uma diferença entre os paces: masculino e feminino, de forma que é interessante que eu consiga classificar os corredores quanto ao sexo.
Eu sei que o tempo masculino é menor que o feminino, ou seja, um campeão do sexo masculino percorre a distância da prova em menos tempo do que uma campeã.
Então eu posso assumir que nos anos em que há apenas 1 ocorrência, o sexo do campeão é masculino, e quando houverem 2 ocorrências o menor pace é do sexo masculino e o maior é do feminino.
Também estou assumindo que não há provas com mais de 2 gêneros.
Bem, posto isso a estratégia para classificar os campeões pelo sexo é:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ordenar por &lt;code&gt;ano&lt;/code&gt; e &lt;code&gt;tempo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;agrupar por &lt;code&gt;ano&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;criar a variável &lt;code&gt;sexo&lt;/code&gt; considerando sexo masculino quando a contagem do grupo for 1 e (masculino, feminino), nesta ordem, quando a contagem do grupo for diferente de 1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Parece meio confuso mas com &lt;code&gt;dplyr&lt;/code&gt; isso tudo pode ser resolvido em meia dúzia de linhas.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  arrange&lt;span class="p"&gt;(&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; tempo&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  group_by&lt;span class="p"&gt;(&lt;/span&gt;ano&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  mutate&lt;span class="p"&gt;(&lt;/span&gt;sexo&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;n&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;masculino&amp;#39;&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;masculino&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feminino&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  ungroup &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class="kp"&gt;as.data.frame&lt;/span&gt;
&lt;span class="kp"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##                  nome    pais corrida  ano            tempo percurso
## 125     Edwin Kipsang  Quênia      88 2012 44,08333333 mins    15000
## 126 Maurine Kipchumba  Quênia      88 2012 51,70000000 mins    15000
## 127     Edwin Kipsang  Quênia      89 2013 43,78333333 mins    15000
## 128      Nancy Kipron  Quênia      89 2013 51,96666667 mins    15000
## 129      Dawit Admasu Etiópia      90 2014 45,06666667 mins    15000
## 130  Ymer Wude Ayalew Etiópia      90 2014 50,71666667 mins    15000
##                 pace      sexo
## 125 2,938888889 mins masculino
## 126 3,446666667 mins  feminino
## 127 2,918888889 mins masculino
## 128 3,464444444 mins  feminino
## 129 3,004444444 mins masculino
## 130 3,381111111 mins  feminino
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Eu executo um &lt;code&gt;tail&lt;/code&gt; para apresentar os resultados porque os dados foram ordenados por ano e portanto os últimos registros são os que apresentam provas com os 2 sexos.
Para verificar se a classificação está correta vou fazer um gráfico do tempo por ano agrupando por sexo para ilustrar a classificação dos campeões.
Mas antes vou criar mais uma coluna chamada &lt;code&gt;contagem&lt;/code&gt;, com a contagem de ocorrências da corrida, essa variável me ajuda a filtar os resultados para apresentar apenas as corridas em que houveram 2 campeões, pois dessa forma eu consigo comparar os níveis de pace por sexo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  group_by&lt;span class="p"&gt;(&lt;/span&gt;ano&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  mutate&lt;span class="p"&gt;(&lt;/span&gt;contagem&lt;span class="o"&gt;=&lt;/span&gt;n&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  ungroup &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span class="kp"&gt;as.data.frame&lt;/span&gt;
ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="p"&gt;,&lt;/span&gt; contagem &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
       aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tempo&lt;span class="p"&gt;),&lt;/span&gt; group&lt;span class="o"&gt;=&lt;/span&gt;sexo&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;sexo&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  geom_point&lt;span class="p"&gt;(&lt;/span&gt;size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk ano-tempo-masc-fem" src="http://wilsonfreitas.github.io/figure/ano-tempo-masc-fem-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;Este gráfico me intriga porque a é possível observar 3 níveis distintos para o comportamento dos tempos dos campeões.
Isso é um reflexo do percurso da prova, pois o tamanho do percurso aumentou ao longo dos anos até estacionar em 15 km.
Outro gráfico semelhante ao anterior, mas apresentando percurso por ano agrupando por sexo, pode mostrar isso melhor.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="p"&gt;,&lt;/span&gt; contagem &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
       aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;percurso&lt;span class="p"&gt;,&lt;/span&gt; group&lt;span class="o"&gt;=&lt;/span&gt;sexo&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;sexo&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  geom_point&lt;span class="p"&gt;(&lt;/span&gt;size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk ano-percurso-masc-fem" src="http://wilsonfreitas.github.io/figure/ano-percurso-masc-fem-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;Em todos as provas, exceto na segunda ocorrência do gráfico acima, os percursos masculinos e femininos são iguais.
Este é um forte indício de que o percurso dessa prova para o sexo feminino também está errado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="p"&gt;,&lt;/span&gt; contagem &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##                  nome      pais corrida  ano            tempo percurso
## 51        Victor Mora  Colômbia      51 1975 23,21666667 mins     8900
## 52 Christa Valensieck  Alemanha      51 1975 28,65000000 mins     8900
## 53     Edmundo Warnke     Chile      52 1976 23,83333333 mins     7300
## 54 Christa Valensieck  Alemanha      52 1976 28,60000000 mins     8900
## 55  Domingo Tibaduiza  Colômbia      53 1977 23,91666667 mins     8900
## 56       Loa Olafsson Dinamarca      53 1977 27,25000000 mins     8900
##                pace      sexo contagem
## 51 2,608614232 mins masculino        2
## 52 3,219101124 mins  feminino        2
## 53 3,264840183 mins masculino        2
## 54 3,213483146 mins  feminino        2
## 55 2,687265918 mins masculino        2
## 56 3,061797753 mins  feminino        2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Listando o &lt;em&gt;dataset&lt;/em&gt; observo que os registros da corrida 52 possuem os diferentes percursos, dessa forma vou assumir que os 2 deveriam ser 8900 m.
Identificado o problema vou seguir com a mesma solução, selecionar os registros da corrida 52 e definir o &lt;code&gt;percurso&lt;/code&gt; para 8900 m.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ss&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="o"&gt;$&lt;/span&gt;corrida &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;52&lt;/span&gt;&lt;span class="p"&gt;),]&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;percurso &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;8900&lt;/span&gt;
ss &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ss &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; mutate&lt;span class="p"&gt;(&lt;/span&gt;pace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;tempo&lt;span class="o"&gt;/&lt;/span&gt;percurso&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para encerrar as dúvidas vou empilhar os gráficos de pace e tempo por ano, para avaliar se as hipóteses assumidas são pertinentes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;gridExtra&lt;span class="p"&gt;)&lt;/span&gt;
ss_mw &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ss&lt;span class="p"&gt;,&lt;/span&gt; contagem &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

plot_pace &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;ss_mw&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pace&lt;span class="p"&gt;),&lt;/span&gt; group&lt;span class="o"&gt;=&lt;/span&gt;sexo&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;sexo&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  geom_point&lt;span class="p"&gt;(&lt;/span&gt;size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
plot_time &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;ss_mw&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;ano&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tempo&lt;span class="p"&gt;),&lt;/span&gt; group&lt;span class="o"&gt;=&lt;/span&gt;sexo&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;sexo&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  geom_point&lt;span class="p"&gt;(&lt;/span&gt;size&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

grid.arrange&lt;span class="p"&gt;(&lt;/span&gt;plot_pace&lt;span class="p"&gt;,&lt;/span&gt; plot_time&lt;span class="p"&gt;,&lt;/span&gt; nrow&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot of chunk ano-pace-tempo-masc-fem" src="http://wilsonfreitas.github.io/figure/ano-pace-tempo-masc-fem-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;Neste gráfico observo 2 regimes de pace contra 3 regimes de tempo.
Há 3 regimes de tempo porque o tempo é diretamente proporcional ao percurso, maior o percurso, maior o tempo, e no período avaliado temos 3 percursos: 8900 m, 13 km e 15 km.
Por outro lado os 2 regimes de pace são curiosos pois indicam a relação do pace com o tamanho do percurso, ou seja, maior o percurso, maior o pace, o que é esperado, dado que é difícil para um corredor manter o mesmo nível de esforço em provas de diferentes distância.
No entanto, a diferença de 2 km entre os percursos de 13 km e 15 km não influencia o pace dos campeões.&lt;/p&gt;
&lt;p&gt;Outra coisa, estes gráficos me fazem desconfiar de que a diferença do desempenho entre os sexos se mantém constante, em média, indicando algum tipo de estacionariedade, mas ainda seriam necessários mais gráficos e alguns testes estatísticos para comprovar isso.&lt;/p&gt;
&lt;h2&gt;Trabalho concluído&lt;/h2&gt;
&lt;p&gt;Bem, acredito aqui que o trabalho de limpeza e formatação está concluído.
Pude passar por diversos problemas oriundos de uma manutenção pobre dos dados.
O conteúdo das páginas não é confiável e vê-se que a atualização é manual e sem verificações.
No entanto, este é o trabalho de quem tem que garimpar dados na Internet, é necessário criar formas de verificação e validação das hipóteses assumidas.
Ainda falta fazer a análise dos dados para tentar responder a pergunta de como o clima pode influenciar o desempenho dos corredores de rua, mas isso fica pra outro post.
Por ora vou salvar estes dados em um arquivo csv para usar na continuação deste trabalho.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Mon, 27 Apr 2015 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2015-04-27:posts/captura-de-dados-da-corrida-de-sao-silvestre-com-python-parte-2.html</guid><category>R</category><category>dplyr</category></item><item><title>The quick and dirty term structure interpolator in R</title><link>http://wilsonfreitas.github.io/posts/the-quick-and-dirty-term-structure-interpolator-in-r.html</link><description>&lt;p&gt;Use interest rate term structures for calculations is one of the daily activies that any quant has to accomplish with.
I use the many of the curves released by &lt;a href="http://www.bmfbovespa.com.br/home.aspx?idioma=pt-br" title="BM&amp;amp;F Bovespa"&gt;BM&amp;amp;F Bovespa&lt;/a&gt; in that &lt;a href="http://www2.bmf.com.br/pages/portal/bmfbovespa/boletim1/TxRef1.asp" title="BVMF Curves"&gt;page&lt;/a&gt;.
In order to have the curves always at hand I've written that few lines of code to download and return an interpolator where the only argument is the number of days I want to interpolate.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;XML&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="m"&gt;.&lt;/span&gt;get_curve_url &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;,&lt;/span&gt; ticker&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    url &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://www2.bmf.com.br/pages/portal/bmfbovespa/boletim1/TxRef1.asp&amp;#39;&lt;/span&gt;
    query &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; str_supplant&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;?Data={refdate}&amp;amp;Data1={sysdate}&amp;amp;slcTaxa={ticker}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%d/%m/%Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            sysdate&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;Sys.Date&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%Y%m%d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            ticker&lt;span class="o"&gt;=&lt;/span&gt;ticker&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="kp"&gt;paste0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; query&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

get_curve &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;,&lt;/span&gt; ticker&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;PRE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    refdate &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;)&lt;/span&gt;
    url &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;get_curve_url&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;,&lt;/span&gt; ticker&lt;span class="p"&gt;)&lt;/span&gt;
    doc &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; htmlTreeParse&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; useInternalNodes&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    num &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; xpathSApply&lt;span class="p"&gt;(&lt;/span&gt;doc&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;//td[contains(@class, &amp;#39;tabelaConteudo&amp;#39;)]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;[\r\n \t]+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xmlValue&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)))&lt;/span&gt;
    num &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;num&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; x&lt;span class="p"&gt;)),&lt;/span&gt; USE.NAMES&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    colspan &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;xpathApply&lt;span class="p"&gt;(&lt;/span&gt;doc&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;//td[contains(@class, &amp;#39;tabelaTitulo&amp;#39;)]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  xmlAttrs &lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]][&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;colspan &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        terms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; num&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        rates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; num&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
        log_pu &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; rates&lt;span class="o"&gt;*&lt;/span&gt;terms&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;360&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        rate &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pu&lt;span class="p"&gt;,&lt;/span&gt; term&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;pu &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;360&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;term&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        terms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; bizdayse&lt;span class="p"&gt;(&lt;/span&gt;refdate&lt;span class="p"&gt;,&lt;/span&gt; num&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        rates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; num&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
        log_pu &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; rates&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        rate &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pu&lt;span class="p"&gt;,&lt;/span&gt; term&lt;span class="p"&gt;)&lt;/span&gt; pu&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;term&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    log_price_interpolator &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; approxfun&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;,&lt;/span&gt; log_pu&lt;span class="p"&gt;,&lt;/span&gt; method&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;linear&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;term&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        pu &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;log_price_interpolator&lt;span class="p"&gt;(&lt;/span&gt;term&lt;span class="p"&gt;))&lt;/span&gt;
        rate&lt;span class="p"&gt;(&lt;/span&gt;pu&lt;span class="p"&gt;,&lt;/span&gt; term&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, once you have loaded that code you can get the Brazilian interbank curve by calling:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;irbrl &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; get_curve&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-06-13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PRE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
irbrl&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##  [1] 7,880000 8,010000 8,158363 8,369100 8,537173 8,655198 8,740000
##  [8] 8,826095 8,895053 8,965071 9,050000 9,121180
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The curve for US dollar deposits in Brazil&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;irusd &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; get_curve&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-06-13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;DOL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
irusd&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;360&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##  [1] 0,3135554 0,6300000 0,8300000 1,0400000 1,1381183 1,2000000 1,2400000
##  [8] 1,2699991 1,2900000 1,3200000 1,3400000 1,3592817
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You could compare in the same chart curves of different dates&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;irbrl_20130613 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; get_curve&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-06-13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PRE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
irbrl_20130611 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; get_curve&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-06-11&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PRE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; terms
irbrl_20130611&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; d11
irbrl_20130613&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; d13
terms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; terms &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kp"&gt;Sys.Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;,&lt;/span&gt; d11&lt;span class="p"&gt;,&lt;/span&gt; type&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xlab&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ylab&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Rates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xaxt&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
axis&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; terms&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%b %y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
points&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;,&lt;/span&gt; d11&lt;span class="p"&gt;,&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
points&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;,&lt;/span&gt; d13&lt;span class="p"&gt;,&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
lines&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;,&lt;/span&gt; d11&lt;span class="p"&gt;,&lt;/span&gt; lwd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;steelblue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
lines&lt;span class="p"&gt;(&lt;/span&gt;terms&lt;span class="p"&gt;,&lt;/span&gt; d13&lt;span class="p"&gt;,&lt;/span&gt; lwd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
legend&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bottomright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; legend&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2013-06-11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2013-06-13&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;steelblue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;darkred&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; pch&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;lwd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
grid&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Brazilian Term Structure" src="http://wilsonfreitas.github.io/figure/irbrl-term-structure-plot-1.png" /&gt; &lt;/p&gt;
&lt;p&gt;The function &lt;code&gt;str_supplant&lt;/code&gt; was explained in another &lt;a href="http://wilsonfreitas.github.io/posts/string-interpolation-in-r.html"&gt;post&lt;/a&gt;.
I mostly use the tickers &lt;code&gt;PRE&lt;/code&gt; for deposits in Brazilian Real and &lt;code&gt;DOL&lt;/code&gt; for deposits in US Dollar.
That code works pretty well for &lt;code&gt;EUR&lt;/code&gt; (Euro deposits) interest rates, but it has to be adjusted to handle &lt;code&gt;DIC&lt;/code&gt; and &lt;code&gt;DIM&lt;/code&gt; tickers (IPCA and IGP-M inflation rates).&lt;/p&gt;
&lt;p&gt;As I told before that is a quick and dirt implementation but it is also quite useful.
With far none effort you have at hand an interpolator for interest rate term structures that can easily be ported to any other curve feeder.&lt;/p&gt;
&lt;p&gt;Other point I'd like to mention is the huge effort, in my opinion, to build a attractive chart using the plot function, bellow I present an example using the &lt;a href="http://ggplot2.org"&gt;ggplot2&lt;/a&gt; package for the same data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;
ir_df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; stack&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sb"&gt;`2014-06-11`&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;d11&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sb"&gt;`2014-06-13`&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;d13&lt;span class="p"&gt;))&lt;/span&gt;
ir_df&lt;span class="o"&gt;$&lt;/span&gt;date &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; terms
ggplot&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;ir_df&lt;span class="p"&gt;,&lt;/span&gt; aes&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;values&lt;span class="p"&gt;,&lt;/span&gt; colour&lt;span class="o"&gt;=&lt;/span&gt;ind&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_point&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; geom_line&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; xlab&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Dates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; ylab&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Rates&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; theme&lt;span class="p"&gt;(&lt;/span&gt;legend.title&lt;span class="o"&gt;=&lt;/span&gt;element_blank&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Brazilian Term Structure with ggplot2" src="http://wilsonfreitas.github.io/figure/irbrl-term-structure-ggplot-1.png" /&gt; &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Sun, 15 Jun 2014 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2014-06-15:posts/the-quick-and-dirty-term-structure-interpolator-in-r.html</guid><category>R</category><category>bizdays</category><category>term structure</category><category>interpolation</category><category>quick tips</category></item><item><title>bizdays—dias úteis no R</title><link>http://wilsonfreitas.github.io/posts/bizdays-dias-uteis-no-r.html</link><description>&lt;p&gt;Quem trabalha no mercado financeiro brasileiro lida constantemente com uma praga que é a contagem de dias úteis.
Não que seja difícil utilizar a contagem de dias úteis para fazer o apreçamento de instrumentos financeiros.
A dificuldade é ter a contagem de dias úteis a mão e de maneira flexível, onde possamos, eventualmente, inserir ou remover feriados.
Essa disponibilidade é a razão pela qual o Excel é tão utilizado.
Basta carregar uma lista de feriados, que hoje são disponibilizados no site da &lt;a href="http://www.anbima.com.br" title="ANBIMA"&gt;ANBIMA&lt;/a&gt; e são suficientes para a maioria dos instrumentos negociados no mercado brasileiro, e chamar a função &lt;code&gt;NETWORKDAYS&lt;/code&gt; para calcular a quantidade de dias úteis entre duas datas de acordo com a lista de feriados.
Há ainda a função &lt;code&gt;WORKDAYS&lt;/code&gt; que retorna uma data somando ou subtraindo uma quantidade de dias úteis a outra data, só que considerando uma lista de feriados.&lt;/p&gt;
&lt;p&gt;Para levar essa disponibilidade ao R eu desenvolvi o pacote &lt;a href="https://github.com/wilsonfreitas/R-bizdays" title="bizdays package"&gt;&lt;code&gt;bizdays&lt;/code&gt;&lt;/a&gt;.
&lt;code&gt;bizdays&lt;/code&gt; é uma pacote ridículo de simples mas que torna a minha vida muito, mas muito menos miserável, quando eu tenho que lidar com contagem de dias.
Tenho utilizado este pacote quase que diariamente no meu trabalho.
Nas próximas seções vou explicar como utilizar as funções e as idéias por trás do pacote.&lt;/p&gt;
&lt;h2&gt;Instalação&lt;/h2&gt;
&lt;p&gt;O &lt;code&gt;bizdays&lt;/code&gt; pode ser instalado das 3 formas a seguir.&lt;/p&gt;
&lt;h4&gt;CRAN&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;install.packages&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;bizdays&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Github + devtools&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;devtools&lt;span class="o"&gt;::&lt;/span&gt;install_github&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;R-bizdays&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;wilsonfreitas&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Task view finance&lt;/h4&gt;
&lt;p&gt;Instalando a &lt;em&gt;task view Finance&lt;/em&gt; o &lt;code&gt;bizdays&lt;/code&gt; vem junto no pacote.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ctv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
install.views&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Finance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Usando bizdays&lt;/h2&gt;
&lt;h3&gt;Criação do calendário&lt;/h3&gt;
&lt;p&gt;Toda a idéia do &lt;code&gt;bizdays&lt;/code&gt; está ao redor da criação do calendário e um calendário é basicamente uma lista de feriados.
Eu disponibilizo junto com &lt;code&gt;bizdays&lt;/code&gt; o &lt;em&gt;dataset&lt;/em&gt; &lt;code&gt;holidaysANBIMA&lt;/code&gt; que já vem com a lista de feriados disponibilizada pela &lt;a href="http://www.anbima.com.br" title="ANBIMA"&gt;ANBIMA&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;data&lt;span class="p"&gt;(&lt;/span&gt;holidaysANBIMA&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;holidaysANBIMA&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] &amp;quot;2001-01-01&amp;quot; &amp;quot;2079-01-01&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;holidaysANBIMA&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] 937
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dada a lista de feriados basta executar a função &lt;code&gt;Calendar&lt;/code&gt; passando a lista como argumento, mas antes vamos dar uma olhada na função &lt;code&gt;Calendar&lt;/code&gt;.
A função &lt;code&gt;Calendar&lt;/code&gt; tem os seguintes argumentos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;args&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Calendar&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;holidays&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="err"&gt;##&lt;/span&gt;     &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weekdays&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;adjust&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;adjust&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="err"&gt;##&lt;/span&gt;     &lt;span class="nx"&gt;adjust&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;adjust&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previous&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O argumento &lt;code&gt;weekdays&lt;/code&gt; define os dias não úteis da semana, em um calendário de dias úteis temos &lt;code&gt;weekdays=c("saturday", "sunday")&lt;/code&gt; representando os fins de semana.
Os argumentos &lt;code&gt;start.date&lt;/code&gt; e &lt;code&gt;end.date&lt;/code&gt; definem os limites do calendário, no entanto, estes argumentos são utilizados apenas quando a lista de &lt;code&gt;holidays&lt;/code&gt; não é fornecida, pois, quando a lista é fornecida os limites são baseados nela.
O argumento &lt;code&gt;dib&lt;/code&gt; define a quantidade de dias por ano no calendário, essa configuração visa extender a utilização do calendário para a utilização de &lt;a href="http://en.wikipedia.org/wiki/Day_count_convention"&gt;convenções de contagem de dias&lt;/a&gt;.
Vou comentar mais sobre a utilização do argumento &lt;code&gt;dib&lt;/code&gt; mais adiante.
Os argumentos &lt;code&gt;adjust.from&lt;/code&gt; e &lt;code&gt;adjust.to&lt;/code&gt; recebem funções para ajustar as datas &lt;code&gt;from&lt;/code&gt; e &lt;code&gt;to&lt;/code&gt; utilizadas na função &lt;code&gt;bizdays&lt;/code&gt;.
A configuração padrão visa reproduzir a função &lt;code&gt;NETWORKDAYS&lt;/code&gt; do Excel.
O argumento &lt;code&gt;name&lt;/code&gt; é apenas descritivo, mas eu gosto de utilizar pois é útil quando temos diferentes calendários.&lt;/p&gt;
&lt;p&gt;Vamos agora criar um calendário referente aos feriados brasileiros.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;cal &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Calendar&lt;span class="p"&gt;(&lt;/span&gt;holidaysANBIMA&lt;span class="p"&gt;,&lt;/span&gt; weekdays&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;saturday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sunday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; dib&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ANBIMA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## Calendar: ANBIMA 
## Range: 2001-01-01 to 2079-01-01 
## weekdays: saturday sunday 
## dib: 252
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note que os limites do calendário foram criados com base nos limites existentes na lista de feriados.&lt;/p&gt;
&lt;h3&gt;Contando dias úteis entre datas&lt;/h3&gt;
&lt;p&gt;Para calcular a quantidade de dias entre duas datas utilizamos a função &lt;code&gt;bizdays&lt;/code&gt; passando o calendário e as datas iniciais e finais.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;args&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;bizdays&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;bizdays&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options$get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;default.calendar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;bizdays&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2013-12-31&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] 252
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Essa função aceita datas em strings no formato ISO (&lt;code&gt;yyyy-mm-dd&lt;/code&gt;) ou objetos &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;POSIXct&lt;/code&gt; e &lt;code&gt;POSIXlt&lt;/code&gt;.
Os argumentos de datas finais e iniciais também aceitam vetores.
Os vetores podem ter tamanhos diferentes, desde que respeitem a &lt;em&gt;recicle rule&lt;/em&gt; do R.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bizdays&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2010-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2011-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2011-12-31&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2012-12-31&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2013-12-31&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2014-12-31&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; cal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1]  501  501 1005 1007
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;bizdays&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2008-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2009-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2010-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2011-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2011-12-31&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2012-12-31&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; cal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] 1005 1002  501  501
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Verificando se datas são dias úteis&lt;/h3&gt;
&lt;p&gt;A função &lt;code&gt;is.bizday&lt;/code&gt; verifica se as datas passadas no argumento são úteis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2014-04-14&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;
is.bizday&lt;span class="p"&gt;(&lt;/span&gt;dates&lt;span class="p"&gt;,&lt;/span&gt; cal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Adicionando dias úteis as datas&lt;/h3&gt;
&lt;p&gt;Para somar dias úteis a uma data utilizamos a função &lt;code&gt;add.bizdays&lt;/code&gt; que soma dias úteis, positivos ou negativos, as datas fornecidas.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;date &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2014-04-14&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# segunda-feira&lt;/span&gt;
add.bizdays&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cal&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;# sexta-feira&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] &amp;quot;2014-04-11&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Gerando sequência de dias úteis&lt;/h3&gt;
&lt;p&gt;Muitas vezes é necessário iterar sobre sequências de dias úteis e para isso temos a função &lt;code&gt;bizseq&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bizseq&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-07-09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2013-07-21&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; cal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] &amp;quot;2013-07-09&amp;quot; &amp;quot;2013-07-10&amp;quot; &amp;quot;2013-07-11&amp;quot; &amp;quot;2013-07-12&amp;quot; &amp;quot;2013-07-15&amp;quot;
## [6] &amp;quot;2013-07-16&amp;quot; &amp;quot;2013-07-17&amp;quot; &amp;quot;2013-07-18&amp;quot; &amp;quot;2013-07-19&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Todos as datas dessa sequência são dias úteis.&lt;/p&gt;
&lt;h3&gt;Ajustando datas&lt;/h3&gt;
&lt;p&gt;Uma coisa muito comum para quem trabalha com dias úteis é o ajuste de data quando cai em dia não útil.
Por exemplo, para apreçar títulos, quando vencimento do título cai em um dia não útil é necessário mover o fluxo para o próximo dia útil.
Para lidar com isso de forma higiênica temos as funções &lt;code&gt;adjust.next&lt;/code&gt; e &lt;code&gt;adjust.previous&lt;/code&gt;.
Estas funções recebem uma data, se for dia útil retorna a própria data, caso contrário retorna o dia útil seguinte ou anterior, dependendo da função que foi chamada.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;adjust.next&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2014-01-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2014-02-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2014-03-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2014-04-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; cal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] &amp;quot;2014-01-02&amp;quot; &amp;quot;2014-02-03&amp;quot; &amp;quot;2014-03-05&amp;quot; &amp;quot;2014-04-01&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Logo, estas funções apenas ajustam as datas fornecidas quando é necessário.&lt;/p&gt;
&lt;h3&gt;Configurando o calendário padrão&lt;/h3&gt;
&lt;p&gt;Como eu falei eu uso &lt;code&gt;bizdays&lt;/code&gt; em base diária e todos os dias o mesmo calendário, o calendário divulgado pela ANBIMA.
Uma coisa insuportável é criar o mesmo calendário toda vez que eu vou utilizar as funções.
Como o objetivo é reduzir a quantidade de miséria na minha vida eu criei o calendário padrão.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bizdays.options&lt;span class="o"&gt;$&lt;/span&gt;set&lt;span class="p"&gt;(&lt;/span&gt;default.calendar&lt;span class="o"&gt;=&lt;/span&gt;cal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Uma vez definido um calendário padrão não é mais necessário passar o calendário como argumento das funções vistas anteriormente.
Dessa maneira, as funções podem ser chamadas como:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bizdays&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-01-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2013-12-31&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] 252
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;dates &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2014-04-14&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;
is.bizday&lt;span class="p"&gt;(&lt;/span&gt;dates&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;adjust.next&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2014-01-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2014-02-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2014-03-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2014-04-01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] &amp;quot;2014-01-02&amp;quot; &amp;quot;2014-02-03&amp;quot; &amp;quot;2014-03-05&amp;quot; &amp;quot;2014-04-01&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sem a necessidade de passar o calendário como parâmetro.
Para tornar as coisa realmente simples eu coloco essa definição no &lt;code&gt;.Rprofile&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="m"&gt;.&lt;/span&gt;First &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;bizdays&lt;span class="p"&gt;)&lt;/span&gt;
    cal &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Calendar&lt;span class="p"&gt;(&lt;/span&gt;holidays&lt;span class="o"&gt;=&lt;/span&gt;holidaysANBIMA&lt;span class="p"&gt;,&lt;/span&gt; name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ANBIMA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    bizdays.options&lt;span class="o"&gt;$&lt;/span&gt;set&lt;span class="p"&gt;(&lt;/span&gt;default.calendar&lt;span class="o"&gt;=&lt;/span&gt;cal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Assim, toda vez que eu inicializo o R já tenho as funções do &lt;code&gt;bizdays&lt;/code&gt; prontas pra utilizar.&lt;/p&gt;
&lt;h3&gt;Demais funções&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bizyears&lt;/code&gt;: retorno o prazo em anos referente a quantidade de dias úteis. Essa função é útil para o apreçamento de instrumentos financeiros onde usualmente as taxas são expressas com periodicidade anual. Dessa maneira, uma vez definido o calendário para a taxa é possível obter o prazo em anos para os cálculos. Por isso é útil a definição do argumento &lt;code&gt;dib&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bizdayse&lt;/code&gt; e &lt;code&gt;bizyearse&lt;/code&gt;: &lt;code&gt;bizdayse&lt;/code&gt; retorna a quantidade de dias úteis equivalente a uma quantidade de dias corridos. É equivalente a somar dias úteis a uma data e calcular os dias úteis entre as duas data utilizando &lt;code&gt;bizdays&lt;/code&gt;. A função &lt;code&gt;bizyearse&lt;/code&gt; é a sua versão anualizada.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;O pacote &lt;code&gt;bizdays&lt;/code&gt; visa a contagem de dias para o apreçamento de instrumentos financeiros de forma simples e intuitíva de utilizar, trazendo para o R a mesma simplicidade encontrada no Excel.
É útil tanto para calendários de dias úteis quanto dias corridos, permitindo a realização destes cálculos através de uma mesma interface.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Thu, 15 May 2014 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2014-05-15:posts/bizdays-dias-uteis-no-r.html</guid><category>R</category><category>bizdays</category><category>dias úteis</category><category>calendário</category></item><item><title>Estimando EWMA na prática</title><link>http://wilsonfreitas.github.io/posts/estimando-ewma-na-pratica.html</link><description>&lt;p&gt;Este post é para quem, assim como eu, sempre quis saber de onde vem o coeficiente $\lambda=0.94$ proposto pelo JP Morgan para estimar a volatilidade via EWMA (Exponential Weighted Moving Average).&lt;/p&gt;
&lt;p&gt;Vou mostrar aqui como estimar o $\lambda$ utilizando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;minimização da soma do erro quadrático $S$&lt;/li&gt;
&lt;li&gt;máxima verosimilhança&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ambas abordagens apresentam resultados semelhantes e vamos observar isso claramente nas funções objetivo utilizadas nos processos de otimização.
Conhecendo estas técnicas você poderá estimar o coeficiente para qualquer série e assim ter autonomia sobre os resultados produzidos por você.&lt;/p&gt;
&lt;h2&gt;Dados utilizados&lt;/h2&gt;
&lt;p&gt;Vou utilizar a série de retornos BOVESPA de março/1997 até março/2014 (retornos contínuos).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;bvsp &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.quandl.com/api/v1/datasets/YAHOO/INDEX_BVSP.csv?&amp;amp;trim_start=1997-03-12&amp;amp;trim_end=2014-03-31&amp;amp;sort_order=desc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; colClasses&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
bvsp.ts &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;bvsp&lt;span class="p"&gt;,&lt;/span&gt; as.xts&lt;span class="p"&gt;(&lt;/span&gt;Close&lt;span class="p"&gt;,&lt;/span&gt; order.by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Date&lt;span class="p"&gt;)))&lt;/span&gt;
bvsp.r &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;bvsp.ts&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- ```{r, echo=FALSE, fig.width=15, fig.cap="BVSP 1997-2014", warning=FALSE}
plot(bvsp.ts, main='', major.ticks='year', minor.ticks=FALSE, major.format='%Y', cex.axis = .7, log="y")
``` --&gt;

&lt;p&gt;&lt;img alt="BVSP Returns 1997-2014" src="http://wilsonfreitas.github.io/figure/bvsp-returns-1997-2014.png" /&gt; &lt;/p&gt;
&lt;p&gt;É interessante observar os &lt;em&gt;clusters&lt;/em&gt; de volatilidade, os de 1998 e 2008 são os mais relevantes (e curiosamente ocorreram em 10 anos).
&lt;em&gt;Clusters&lt;/em&gt; menores podem ser observados em 1997 e 2011.&lt;/p&gt;
&lt;h2&gt;Introduzindo o EWMA&lt;/h2&gt;
&lt;p&gt;Uma excelente fonte sobre Alisamento Exponencial é Capítulo 4 do &lt;a href="http://www.ime.usp.br/~pam/ST.html" title="Séries Temporais"&gt;livro do Morettin&lt;/a&gt; sobre séries temporais.
Também sugiro fortemente a leitura do capítulo sobre volatilidade e correlação do &lt;a href="http://www-2.rotman.utoronto.ca/~hull/ofod/index.html" title="John Hull"&gt;livro do Hull&lt;/a&gt;.
Aqui eu apenas apresentarei a equação que vou utilizar nas próximas seções para estimar o $\lambda$.&lt;/p&gt;
&lt;p&gt;O EWMA é definido como:&lt;/p&gt;
&lt;p&gt;$$
\sigma^2_n = \lambda\sigma^2_{n-1} + (1-\lambda)r^2_{n-1}
$$&lt;/p&gt;
&lt;p&gt;onde $\sigma^2_n$ é a variância estimada e $r^2_n$ é o retorno, ambos referentes ao instante $n$.&lt;/p&gt;
&lt;p&gt;Abaixo segue uma implemetação do EWMA utilizando &lt;em&gt;closures&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ewma_builder &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; init&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;var&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="m"&gt;.&lt;/span&gt;check_init &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;value&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;init &lt;span class="o"&gt;==&lt;/span&gt; value&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;rets &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; na.trim&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;n &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;rets&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;check_init&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;zero&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="m"&gt;.i&lt;/span&gt;nit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;check_init&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="m"&gt;.i&lt;/span&gt;nit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;rets&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;check_init&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;var&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="m"&gt;.i&lt;/span&gt;nit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;var&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;rets&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;is.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;init&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="m"&gt;.i&lt;/span&gt;nit &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;init&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kp"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;unknown init: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; init&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="m"&gt;.&lt;/span&gt;r2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;rets&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lambda&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    r2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; lambda&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;r2
    s &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; filter&lt;span class="p"&gt;(&lt;/span&gt;r2&lt;span class="p"&gt;,&lt;/span&gt; lambda&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;recursive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; init&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;.i&lt;/span&gt;nit&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;-.&lt;/span&gt;n&lt;span class="p"&gt;]&lt;/span&gt;
    x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; as.xts&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;,&lt;/span&gt; order.by&lt;span class="o"&gt;=&lt;/span&gt;index&lt;span class="p"&gt;(&lt;/span&gt;r2&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;EWMA&amp;#39;&lt;/span&gt;
    x
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A função &lt;code&gt;ewma_builder&lt;/code&gt; retorna uma &lt;em&gt;closure&lt;/em&gt; que calcula o EWMA para a série de retornos fornecida em &lt;code&gt;rets&lt;/code&gt; e considerando $\sigma^2_1$ de acordo com &lt;code&gt;init&lt;/code&gt;.
&lt;code&gt;init&lt;/code&gt; pode assumir 4 valores:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zero&lt;/code&gt; onde $\sigma^2_1 = 0$&lt;/li&gt;
&lt;li&gt;&lt;code&gt;first&lt;/code&gt; onde $\sigma^2_1 = r^2_1$&lt;/li&gt;
&lt;li&gt;&lt;code&gt;var&lt;/code&gt; onde $\sigma^2_1$ é a variância amostral&lt;/li&gt;
&lt;li&gt;um número para ser utilizado diretamente como $\sigma_1^2$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pontos importantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A função retornada calcula a variância na frequência da série de retornos fornecida, portanto, uma série diária retornará variância diária e para obter a volatilidade anualizada é necessário $\sqrt{252 \cdot}$.&lt;/li&gt;
&lt;li&gt;$\sigma^2_1$ não é retornado pela função que calcula a variância. Entendo que $\sigma^2_1$ é uma suposição que contribui para a convergência das estimativas de volatilidade, portanto, não incluo esse &lt;em&gt;chute&lt;/em&gt; na série retornada.&lt;/li&gt;
&lt;li&gt;A função &lt;code&gt;ewma_builder&lt;/code&gt; foi desenvolvida para receber séries &lt;code&gt;xts&lt;/code&gt; ou &lt;code&gt;zoo&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Abaixo segue o cálculo da volatilidade utilizando $\lambda=0.94$.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;compute_ewma &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ewma_builder&lt;span class="p"&gt;(&lt;/span&gt;bvsp.r&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
x.ewma &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;compute_ewma&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.94&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="BVSP EWMA 0.94" src="http://wilsonfreitas.github.io/figure/bvsp-returns-ewma-094-volatility.png" /&gt; &lt;/p&gt;
&lt;p&gt;Note que considero $\sigma^2_1=r^2_1$.&lt;/p&gt;
&lt;h2&gt;Estimando via minimização de $S$&lt;/h2&gt;
&lt;p&gt;$S$ é a soma do erro quadrático, ou seja:&lt;/p&gt;
&lt;p&gt;$$
S = \sum^N_{n=1}(s^2_n - \sigma^2_n)^2
$$&lt;/p&gt;
&lt;p&gt;é a soma quadrado da diferença entre a variância estimada $\sigma^2_n$ e a variância observada $s^2_n$, para uma amostra de tamanho $N$.
O $\lambda$ que nos interessa é aquele que minimiza essa soma.&lt;/p&gt;
&lt;p&gt;Aqui temos o primeiro obstáculo:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;quem é $s^2$?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Antes de definir a variância observada (o que chega a ser um contrasenso dado que não observamos a variância de fato) vou listar duas alternativas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;retorno quadrático $r^2_n$: é uma alternativa honesta pois assim estariamos utilizando EWMA para estimar o retorno quadrático 1 passo a frente.&lt;/li&gt;
&lt;li&gt;desvio padrão amostral dos próximos $T$ pontos: uma alternativa mais ambiciosa tentando prever uma janela maior no futuro. Segundo &lt;a href="http://www-2.rotman.utoronto.ca/~hull/ofod/index.html" title="John Hull"&gt;Hull&lt;/a&gt; essa foi a abordagem adotada pelo JPMorgan para chegar ao $\lambda=0.94$, eles utilizaram $T=25$.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nas próximas sessões vou encontrar $\lambda$ em ambas as abordagens.&lt;/p&gt;
&lt;h3&gt;Utilizando o retorno quadrático&lt;/h3&gt;
&lt;p&gt;Para encontrar $\lambda$ minimizando $S$ e considerando o retorno quadrático como variância observada&lt;/p&gt;
&lt;p&gt;$$
S = \sum^N_{n=1} (r^2_n - \sigma^2_n)
$$&lt;/p&gt;
&lt;p&gt;precisamos construir a função objetivo que retorne $S$ para uma dado $\lambda$.
A função abaixo retorna uma &lt;em&gt;closure&lt;/em&gt; que faz isso.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;f_obj_builder &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; init&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; na.rm&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;rets &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rets &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;
  compute_ewma &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ewma_builder&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; init&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="m"&gt;.&lt;/span&gt;r2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;rets&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
  &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lambda&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="m"&gt;.&lt;/span&gt;ewma &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; compute_ewma&lt;span class="p"&gt;(&lt;/span&gt;lambda&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;na.omit&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;r2 &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;ewma&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note que tiro diretamente a diferença entre o retorno quadrático e &lt;code&gt;.ewma&lt;/code&gt;, pois dado que ambos são séries temporais &lt;code&gt;xts&lt;/code&gt;, tenho a garantida de que as operações serão realizadas entre elementos da mesma data.&lt;/p&gt;
&lt;p&gt;Para encontrar $\lambda$ basta minimizar a função objetivo.
Vou utilizar a função &lt;code&gt;optimize&lt;/code&gt;.
Essa função procura o menor valor em um intervalo dado para uma função com apenas 1 parâmetro.
Como a nossa função objetivo recebe apenas $\lambda$ e sabemos que $0 &amp;lt; \lambda &amp;lt; 1$, &lt;code&gt;optimize&lt;/code&gt; resolve o nosso problema.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;f_obj &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; f_obj_builder&lt;span class="p"&gt;(&lt;/span&gt;bvsp.r&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;o &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; optimize&lt;span class="p"&gt;(&lt;/span&gt;f_obj&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; $minimum&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; [1] 0.9091&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; &lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; $objective&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; [1] 0.01267&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O valor encontrado foi $\lambda = 0.91$ e não fica muito longe do $0.94$ proposto pelo RiskMetrics.&lt;/p&gt;
&lt;p&gt;Uma coisa interessante é olhar o comportamento da função objetivo.
Dado que temos a função objetivo e ela tem apenas 1 argumento, fica fácil vê-la em um gráfico:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;s &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; length.out&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
t &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;,&lt;/span&gt; f_obj&lt;span class="p"&gt;)&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; type&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xlim&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
abline&lt;span class="p"&gt;(&lt;/span&gt;h&lt;span class="o"&gt;=&lt;/span&gt;o&lt;span class="o"&gt;$&lt;/span&gt;objective&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Objective Function Squared Returns" src="http://wilsonfreitas.github.io/figure/objective-function-squared-returns.png" /&gt; &lt;/p&gt;
&lt;p&gt;Olhando o gráfico observamos que há apenas 1 ponto de mínimo na função e que este está bem próximo a $\lambda = 0.91$.&lt;/p&gt;
&lt;p&gt;Podemos agora calcular a variância da série e visualizar o resultado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;x.ewma &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; compute_ewma&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.91&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="BVSP EWMA Squared Returns" src="http://wilsonfreitas.github.io/figure/bvsp-returns-ewma-volatility-squared-returns.png" /&gt; &lt;/p&gt;
&lt;h3&gt;Utilizando o desvio padrão futuro&lt;/h3&gt;
&lt;p&gt;Agora para encontrar $\lambda$ minimizando $S$ e considerando que o desvio padrão dos próximos $T$ pontos, $v_n$, é a variância observada.&lt;/p&gt;
&lt;p&gt;$$
S = \sum^N_{n=1} (v_n - \sigma^2_n)
$$&lt;/p&gt;
&lt;p&gt;precisamos construir a seguinte função objetivo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;f_obj_builder &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; width&lt;span class="p"&gt;,&lt;/span&gt; init&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;mean &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; na.rm&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;rets &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rets &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;&lt;span class="kp"&gt;mean&lt;/span&gt;
  &lt;span class="m"&gt;.&lt;/span&gt;var &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rollapply&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; var&lt;span class="p"&gt;,&lt;/span&gt; width&lt;span class="o"&gt;=&lt;/span&gt;width&lt;span class="p"&gt;,&lt;/span&gt; align&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;left&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  compute_ewma &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; ewma_builder&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; init&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lambda&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="m"&gt;.&lt;/span&gt;ewma &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; compute_ewma&lt;span class="p"&gt;(&lt;/span&gt;lambda&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;na.omit&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;var &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;ewma&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note que essa função recebe, no parâmetro &lt;code&gt;width&lt;/code&gt;, a quantidade de pontos que será utilizada no cálculo da variância amostral.
Vou utilizar 25, seguindo a sugestão descrita no Hull.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;f_obj &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; f_obj_builder&lt;span class="p"&gt;(&lt;/span&gt;bvsp.r&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;o &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; optimize&lt;span class="p"&gt;(&lt;/span&gt;f_obj&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; $minimum&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; [1] 0.9813&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; &lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; $objective&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;##&lt;/span&gt;&lt;span class="c"&gt; [1] 0.001958&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Desta vez o valor encontrado foi $\lambda = 0.98$, significativamente diferente de $0.91$.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;s &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; length.out&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
t &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;,&lt;/span&gt; f_obj&lt;span class="p"&gt;)&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;s&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; type&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xlim&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
abline&lt;span class="p"&gt;(&lt;/span&gt;h&lt;span class="o"&gt;=&lt;/span&gt;o&lt;span class="o"&gt;$&lt;/span&gt;objective&lt;span class="p"&gt;,&lt;/span&gt; col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="Objective Function Squared Returns" src="http://wilsonfreitas.github.io/figure/objective-function-volatility-forecast.png" /&gt; &lt;/p&gt;
&lt;p&gt;A função objetivo para esta abordagem também apresenta apenas 1 ponto de mínimo, garantindo a coerência do resultado encontrado.&lt;/p&gt;
&lt;p&gt;Vamos novamente ver o gráfico dos retornos envolvidos pela volatilidade para ter uma idéia de como se comporta a volatilidade com relação aos retornos observados utilizando-se um $\lambda$ tão alto.&lt;/p&gt;
&lt;p&gt;&lt;img alt="BVSP EWMA Squared Returns" src="http://wilsonfreitas.github.io/figure/bvsp-returns-ewma-volatility-forecast.png" /&gt; &lt;/p&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Dada a diferença entre os valores de $\lambda$ é necessária uma reflexão mais profunda sobre o tema.
Obviamente a diferença reflete a escolha de $s^2$ e essa deve refletir o objetivo do modelo.
Na minha opinião, a primeira abordadem tem como objetivo o &lt;em&gt;forecast&lt;/em&gt; da variância de retornos diários, e portanto é mais adequada para o cálculo de VAR diário, por exemplo.
Observando a série de retornos identificamos os &lt;em&gt;clusters&lt;/em&gt; de volatilidade, que indicam uma mudança de regime da série, o que me leva a supor que o parâmetro $\lambda$ varia ao longo do tempo.
Um teste fora da amostra pode ser utilizado para avaliar o período de aderência do modelo encontrado, pois, uma vez que ocorra mudança de regime na série é importante reestimar o parâmetro.
O problema aqui torna-se como identificar a mudança de regime.&lt;/p&gt;
&lt;p&gt;A segunda abordadem, que apresenta um $\lambda$ alto, na minha opinião, já visa um comportamento mais estacionário.
Também pode ser utilizado para calcular o VAR diário, por exemplo, no entanto, poderia ser utilizado para o VAR de janelas maiores como 10 dias, sem perda de generalidade.
Acredito que com essa abordagem, a necessidade de reestimar o parâmetro seja menor, dado o efeito da utilização da média na estimação.&lt;/p&gt;
&lt;p&gt;Contudo, seria prudente buscar formas quantitativas de comparar as abordagens.
Acredito que testes de frequência e testes fora da amostra são boas alternativas.&lt;/p&gt;
&lt;p&gt;A estimação via máxima verosimilhança fica para outro post, onde teremos uma técnica que considera premissas relacionadas aos retornos ao invés da variância e assim poderemos ver de qual abordadem ela se aproxima, em termos do $\lambda$ estimado.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Sun, 13 Apr 2014 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2014-04-13:posts/estimando-ewma-na-pratica.html</guid><category>R</category><category>volatility</category><category>risk management</category></item><item><title>String interpolation in R</title><link>http://wilsonfreitas.github.io/posts/string-interpolation-in-r.html</link><description>&lt;!-- param = {domain: 'valvion.com', media: 'http://media.valvion.com/'};
url = "{media}logo.gif".supplant(param); --&gt;

&lt;p&gt;String handling in R is hard, there are a few packages that help making that task not so hard, but it is still hard.
In my opinion string handling in R will never be as good as languages like Python or Perl, it looks like the language hasn't been designed to face that problem.
But sincerely speaking, I don't think R realy need that, I can pass without it, I can go fairly well with the packages available, and the most popular is &lt;a href="http://cran.r-project.org/web/packages/stringr/index.html" title="Hadley Wickham's stringr"&gt;&lt;code&gt;stringr&lt;/code&gt;&lt;/a&gt; developed by Hadley Wickham.
It has several good functions for string handling, but it lacks string interpolation like we do in Python.
That's the reason why I developed &lt;code&gt;str_supplant&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;str_supplant &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;string&lt;span class="p"&gt;,&lt;/span&gt; repl&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    result &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; str_match_all&lt;span class="p"&gt;(&lt;/span&gt;string&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\\{([^{}]*)\\}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;result&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;string&lt;span class="p"&gt;)&lt;/span&gt;
    result &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; result&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="kr"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;i &lt;span class="kr"&gt;in&lt;/span&gt; &lt;span class="kp"&gt;seq_len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;result&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; result&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;,]&lt;/span&gt;
        pattern &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        key &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; x&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kp"&gt;is.null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;repl&lt;span class="p"&gt;[[&lt;/span&gt;key&lt;span class="p"&gt;]]))&lt;/span&gt;
            string &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pattern&lt;span class="p"&gt;,&lt;/span&gt; repl&lt;span class="p"&gt;[[&lt;/span&gt;key&lt;span class="p"&gt;]],&lt;/span&gt; string&lt;span class="p"&gt;,&lt;/span&gt; perl&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    string
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here it follows an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;parms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;media&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://aboutwilson.net&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; face&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;wilson&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
str_supplant&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{media}/logo.gif, {media}/img/ {face}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; parms&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] &amp;quot;http://aboutwilson.net/logo.gif, http://aboutwilson.net/img/ wilson&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first argument is the string to be interpolated and the second a &lt;code&gt;list&lt;/code&gt; with the keys to be used.
If a key doesn't match it isn't interpolated.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;parms &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
str_supplant&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;My name is {name}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; parms&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] &amp;quot;My name is {name}&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That implementation was deeply inspired by &lt;a href="http://javascript.crockford.com/remedial.html" title="Douglas Crockford"&gt;Douglas Crockford&lt;/a&gt;'s &lt;code&gt;supplant&lt;/code&gt; implementation.
Unfortunately that implementation hasn't been vectorized yet, but I think it is quite useful anyway.
I hope it help others like it's been helping me.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Wed, 09 Apr 2014 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2014-04-09:posts/string-interpolation-in-r.html</guid><category>R</category><category>string handling</category></item><item><title>Computing EWMA 2</title><link>http://wilsonfreitas.github.io/posts/computing-ewma-2.html</link><description>&lt;p&gt;Months ago I released a post entitled &lt;a href="http://wilsonfreitas.github.io/posts/computing-ewma.html" title="Computing EWMA"&gt;Computing EWMA&lt;/a&gt; exploring the functional approach to implement EWMA calculations in R and also compared that with what I called &lt;em&gt;loop-oriented&lt;/em&gt; implementation.
That was quite ammazing to see that the functional approach was almost 2 times faster.&lt;/p&gt;
&lt;p&gt;After a while I found the function &lt;code&gt;filter&lt;/code&gt; of the package &lt;code&gt;stats&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;convolution&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;recursive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
&lt;span class="err"&gt;##&lt;/span&gt;     &lt;span class="nx"&gt;sides&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;circular&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="err"&gt;##&lt;/span&gt; &lt;span class="nx"&gt;NULL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This function applies linear filtering to univariate or multivariate time series.
You can get a moving average by setting &lt;code&gt;method="convolution"&lt;/code&gt; or an autoregression for &lt;code&gt;method="recursive"&lt;/code&gt;.
Since EWMA is an autoregressive model, the &lt;code&gt;"recursive"&lt;/code&gt; method is appropriate.
The argument &lt;code&gt;x&lt;/code&gt; receives the time series and &lt;code&gt;filter&lt;/code&gt; a vector of coefficients.
The &lt;code&gt;"recursive"&lt;/code&gt; method uses the &lt;code&gt;init&lt;/code&gt; argument to specify the initial values of the time series.
Providing a series &lt;code&gt;x&lt;/code&gt; and a filter $\phi$ the response &lt;code&gt;y&lt;/code&gt; is much like the sequence below:&lt;/p&gt;
&lt;p&gt;$$
y_1 = 0 \hspace{0.5cm}
y_2 = \phi y_1 + x_1 \hspace{0.5cm}
y_2 = \phi y_2 + x_2 \hspace{0.5cm}
\dots \hspace{0.5cm}
y_{n+1} = \phi y_n + x_n
$$&lt;/p&gt;
&lt;p&gt;Taking a look at EWMA's dynamics&lt;/p&gt;
&lt;p&gt;$$
\hat\sigma^2_0 = 0  \hspace{0.5cm}
\hat\sigma^2_1 = \lambda\hat\sigma^2_0 + (1 - \lambda)r^2_0  \hspace{0.5cm}
\hat\sigma^2_2 = \lambda\hat\sigma^2_1 + (1 - \lambda)r^2_1  \hspace{0.5cm}
\dots  \hspace{0.5cm}
\hat\sigma^2_{t+1} = \lambda\hat\sigma^2_t + (1 - \lambda)r^2_t
$$&lt;/p&gt;
&lt;p&gt;we observe that the input $x_i = (1 - \lambda)r^2_i$, the filter $\phi = \lambda$ and $y_i = \sigma^2_i$ is the response.
The initial value can be set to $0$.
The code implementation follows below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ewma.filter &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; lambda&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    r2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; lambda&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; rets&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
    &lt;span class="kp"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;filter&lt;span class="p"&gt;(&lt;/span&gt;r2&lt;span class="p"&gt;,&lt;/span&gt; lambda&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;recursive&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; init &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See that this implementation is even simpler than the others, although it is not so easy to comprehend.
Running the same test done before we see that this is not only simpler but also faster.
It runs almost 2 times faster than the functional approach.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ewma.loop&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; lambda&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##    user  system elapsed 
##   4.101   0.026   4.127
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ewma.func&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; lambda&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##    user  system elapsed 
##   2.293   0.009   2.302
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ewma.filter&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; lambda&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##    user  system elapsed 
##   1.062   0.009   1.072
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here it has the &lt;a href="https://gist.github.com/wilsonfreitas/9972408"&gt;full code&lt;/a&gt;.&lt;/p&gt;
&lt;script src="https://gist.github.com/wilsonfreitas/9972408.js"&gt;&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Fri, 04 Apr 2014 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2014-04-04:posts/computing-ewma-2.html</guid><category>risk management</category><category>volatility</category><category>R</category></item><item><title>Pricing Brazilian Government Bonds: LFT</title><link>http://wilsonfreitas.github.io/posts/pricing-brazilian-government-bonds-lft.html</link><description>&lt;p&gt;For many years I've been working for and with software vendors in the brazilian financial industry.
The great majority of pricing and risk management aplications running on here were not developed here in Brazil.
I think that is the main reason I saw many projects struggling to deliver a glimpse of what had been promissed during the software selection meetings.
One thing that is usually said is that brazilian market has its &lt;a href="http://en.wikipedia.org/wiki/Jabuticaba"&gt;jabuticabas&lt;/a&gt;, yeah jabuticaba.
It is a sweet fruit which grows in Brazil, vastly.
And like the fruit jabuticaba, the brazilian financial market has a bunch of financial instruments with annoying characteristics such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;business days rules&lt;/li&gt;
&lt;li&gt;truncation rules, mainly for interest rates&lt;/li&gt;
&lt;li&gt;stupid inflation rules&lt;/li&gt;
&lt;li&gt;the PTAX currency which yields the dirty coupon for the foreign interest rate&lt;/li&gt;
&lt;li&gt;and many others&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post I want to start a series where will show the steps to validate the pricing rules for a few brazilian financial instruments.
I am going to start with the brazilian government floating rate bond called LFT or Letras Financeiras do Tesouro (Treasury Financial Letters).
Despite being a Floating Rate Bond, LFT is traded above its face value and a spread, usually quite small and negative, is used to discount it.
These calculations seem to be pretty simple but it hides some pitfalls and because of that we are going to go on step by step, paying attention to details.&lt;/p&gt;
&lt;h2&gt;The instrument&lt;/h2&gt;
&lt;p&gt;As mentioned before, LFT is a Floating Rate Bond so it accumulates daily interest rate from its issue date up to maturity.
The LFT's issue value is R$ 1000,00 then the fair value of a LFT is&lt;/p&gt;
&lt;p&gt;$$
LFT_t = 1000 \prod_{n=t_i}^{t-1}(1 + r_{n})^\frac{1}{252}
$$&lt;/p&gt;
&lt;p&gt;where $t$ refers to the mark-to-market date, $t_i$ the issue date and $t-1$ the business day before mark-to-market date.
However, it is usually traded in values higher than the fair value as if a negative spread was applied discounting the fair value, leading to:&lt;/p&gt;
&lt;p&gt;$$
LFT_t = \frac{1000 \prod_{n=t_i}^{t-1}(1 + r_{n})^\frac{1}{252}}{(1 + s_t)^{D_T/252}}
$$&lt;/p&gt;
&lt;p&gt;where $s_t$ is the spread and $D_T$ the number of business days up to maturity.&lt;/p&gt;
&lt;h2&gt;Notional Value — VNA&lt;/h2&gt;
&lt;p&gt;The rule to compute the notional value (VNA—Valor Nominal Acumulado) is fairly simple, accumulate the daily interest rate from LFT's issue date up to reference date (mark-to-market date).&lt;/p&gt;
&lt;p&gt;What do we need?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;issue date&lt;/li&gt;
&lt;li&gt;reference date&lt;/li&gt;
&lt;li&gt;daily brazilian government interest rate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The LFT's issue date is 2000-07-01 and our reference date is 2014-03-21.
Let's start setting the reference date:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ref_date &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2014-03-21&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The historical interest rates are downloaded from &lt;a href="http://www.quandl.com" title="Quandl"&gt;Quandl&lt;/a&gt; and data in properly transformed to suitable formats:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Quandl&lt;span class="p"&gt;)&lt;/span&gt;
selic &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Quandl&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;BCB/1178&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; start_date&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2000-07-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; end_date&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2014-03-21&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sort&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;asc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
selic &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;selic&lt;span class="p"&gt;,&lt;/span&gt; Date&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Date&lt;span class="p"&gt;))&lt;/span&gt;
str&lt;span class="p"&gt;(&lt;/span&gt;selic&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## &amp;#39;data.frame&amp;#39;:    3448 obs. of  2 variables:
##  $ Date : Date, format: &amp;quot;2014-03-21&amp;quot; &amp;quot;2014-03-20&amp;quot; ...
##  $ Value: num  10 10 10 10 10 10 10 10 10 10 ...
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Computing VNA&lt;/h3&gt;
&lt;p&gt;The formula to compute VNA is&lt;/p&gt;
&lt;p&gt;$$
VNA_n = 1000\prod_{n=1}^{T}(1 + r_{n-i})^\frac{1}{252}
$$&lt;/p&gt;
&lt;p&gt;where &lt;code&gt;T&lt;/code&gt; refers to issue date.
As I said before, the formula is pretty simple but hides inconvenient secrets.
This formula is computed in 3 steps, enumerated below:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Compute the interest rate factor $(1 + r_i)^\frac{1}{252}$ and round it in 8 digits&lt;/li&gt;
&lt;li&gt;Compute the accumulated factor, using &lt;code&gt;cumprod&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Compute the VNA multiplying the accumulated factor by 1000 and truncate it in 6 digits&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The final value is shifted one day because the accumulated amount refers to the day after the interest rate is released.
The function &lt;code&gt;compute_vna&lt;/code&gt; below execute these steps.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;compute_vna &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ds&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    ds &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ds&lt;span class="p"&gt;,&lt;/span&gt; Factor&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;round&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; Value&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    ds &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ds&lt;span class="p"&gt;,&lt;/span&gt; CumFactor&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;cumprod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Factor&lt;span class="p"&gt;))&lt;/span&gt;
    ds &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ds&lt;span class="p"&gt;,&lt;/span&gt; VNA&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;truncate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;CumFactor&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    ds&lt;span class="o"&gt;$&lt;/span&gt;VNA &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ds&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;NA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; VNA&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;VNA&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)]))&lt;/span&gt;
    ds
&lt;span class="p"&gt;}&lt;/span&gt;

selic &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; compute_vna&lt;span class="p"&gt;(&lt;/span&gt;selic&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;selic&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##         Date Value     Factor   CumFactor         VNA
## 1 2014-03-21    10 1,00037829 1,000378290          NA
## 2 2014-03-20    10 1,00037829 1,000756723 1000,378290
## 3 2014-03-19    10 1,00037829 1,001135299 1000,756723
## 4 2014-03-18    10 1,00037829 1,001514019 1001,135299
## 5 2014-03-17    10 1,00037829 1,001892882 1001,514018
## 6 2014-03-14    10 1,00037829 1,002271888 1001,892881
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;selic&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##            Date Value     Factor   CumFactor         VNA
## 3443 2000-07-10    17 1,00062322 5,649993242 5646,474246
## 3444 2000-07-07    17 1,00062322 5,653514431 5649,993242
## 3445 2000-07-06    17 1,00062322 5,657037814 5653,514430
## 3446 2000-07-05    17 1,00062322 5,660563393 5657,037814
## 3447 2000-07-04    17 1,00062322 5,664091170 5660,563393
## 3448 2000-07-03    17 1,00062322 5,667621144 5664,091169
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Observe the VNA for the reference date, we will use this value to compute the theoretical value.&lt;/p&gt;
&lt;h2&gt;Computing the theoretical value&lt;/h2&gt;
&lt;p&gt;To compute the LFT's theoretical value we need the terms and conditions of the contracts.
That information can be obtained at &lt;a href="http://www.anbima.com.br/merc_sec/merc-sec.asp" title="Government Bonds Quotations"&gt;ANBIMA's web site&lt;/a&gt;, there is a link to a text file which contains relevant information to price all brazilian government bonds.
Unfortunately, only the last 5 business days are kept available to download.
The file used to validate the prices can be found &lt;a href="/datasets/ms140321.txt"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The code below loads and prepares data for pricing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tit_pub &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.table&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ms140321.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; skip&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sep&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;@&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
lft_quot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tit_pub&lt;span class="p"&gt;,&lt;/span&gt; Titulo &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;LFT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
lft_quot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; lft_quot&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Data.Referencia&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Data.Vencimento&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Tx..Indicativas&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;PU&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lft_quot&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;RefDate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Maturity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Spread&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;SpotPrice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

lft_quot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lft_quot&lt;span class="p"&gt;,&lt;/span&gt;
    Spread&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; Spread&lt;span class="p"&gt;)),&lt;/span&gt;
    SpotPrice&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; SpotPrice&lt;span class="p"&gt;)),&lt;/span&gt;
    RefDate&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;RefDate&lt;span class="p"&gt;),&lt;/span&gt; format&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y%m%d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    Maturity&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;as.character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;Maturity&lt;span class="p"&gt;),&lt;/span&gt; format&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y%m%d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

lft_quot
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##       RefDate   Maturity  Spread   SpotPrice
## 16 2014-03-21 2014-09-07 -0,0146 6023,552820
## 17 2014-03-21 2015-03-07 -0,0157 6024,058764
## 18 2014-03-21 2015-09-07 -0,0169 6024,636986
## 19 2014-03-21 2016-03-01 -0,0179 6025,233278
## 20 2014-03-21 2016-09-07 -0,0183 6025,865709
## 21 2014-03-21 2017-03-07 -0,0196 6026,630649
## 22 2014-03-21 2017-09-07 -0,0205 6027,419681
## 23 2014-03-21 2018-03-01 -0,0209 6028,088251
## 24 2014-03-21 2018-09-01 -0,0209 6028,732728
## 25 2014-03-21 2019-03-01 -0,0217 6029,588015
## 26 2014-03-21 2020-03-01 -0,0228 6031,280520
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We observe 11 instruments and we have selected all necessary fields to price them properly, now we have a few adjustments.
Firstly, we have to move the maturity to the next business day if it is not a business day and after that we have to find out the number of business days between the reference and maturity dates.
These tasks can be easily done with the &lt;a href="https://github.com/wilsonfreitas/R-bizdays" title="bizdays package"&gt;bizdays&lt;/a&gt; package, developed by me.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wilsonfreitas/R-bizdays" title="bizdays package"&gt;bizdays&lt;/a&gt; works with calendars as a list of dates representing non-working days.
Different from other packages which work with algorithmic calendar implementations, &lt;strong&gt;bizdays&lt;/strong&gt; can have any calendar set simply using a list of dates.
It relies on your needs.
I've used the dataset &lt;code&gt;holidaysANBIMA&lt;/code&gt; which is part of &lt;strong&gt;bizdays&lt;/strong&gt;.
This calendar has all financial holidays practiced in Brazil.
The function &lt;code&gt;adjust.next&lt;/code&gt; move the given date to the following if it is not a business day and 
the function &lt;code&gt;bizdays&lt;/code&gt; returns the amount of business days between 2 dates.
Look that both functions work vectorized.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;bizdays&lt;span class="p"&gt;)&lt;/span&gt;
cal &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; Calendar&lt;span class="p"&gt;(&lt;/span&gt;holidays&lt;span class="o"&gt;=&lt;/span&gt;holidaysANBIMA&lt;span class="p"&gt;,&lt;/span&gt; name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ANBIMA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; weekdays&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;saturday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sunday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

lft_quot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lft_quot&lt;span class="p"&gt;,&lt;/span&gt; MaturityAdj&lt;span class="o"&gt;=&lt;/span&gt;adjust.next&lt;span class="p"&gt;(&lt;/span&gt;Maturity&lt;span class="p"&gt;,&lt;/span&gt; cal&lt;span class="p"&gt;))&lt;/span&gt;
lft_quot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lft_quot&lt;span class="p"&gt;,&lt;/span&gt; BusinessDays&lt;span class="o"&gt;=&lt;/span&gt;bizdays&lt;span class="p"&gt;(&lt;/span&gt;ref_date&lt;span class="p"&gt;,&lt;/span&gt; MaturityAdj&lt;span class="p"&gt;,&lt;/span&gt; cal&lt;span class="p"&gt;))&lt;/span&gt;

lft_quot
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;##       RefDate   Maturity  Spread   SpotPrice MaturityAdj BusinessDays
## 16 2014-03-21 2014-09-07 -0,0146 6023,552820  2014-09-08          117
## 17 2014-03-21 2015-03-07 -0,0157 6024,058764  2015-03-09          243
## 18 2014-03-21 2015-09-07 -0,0169 6024,636986  2015-09-08          369
## 19 2014-03-21 2016-03-01 -0,0179 6025,233278  2016-03-01          488
## 20 2014-03-21 2016-09-07 -0,0183 6025,865709  2016-09-08          621
## 21 2014-03-21 2017-03-07 -0,0196 6026,630649  2017-03-07          744
## 22 2014-03-21 2017-09-07 -0,0205 6027,419681  2017-09-08          872
## 23 2014-03-21 2018-03-01 -0,0209 6028,088251  2018-03-01          989
## 24 2014-03-21 2018-09-01 -0,0209 6028,732728  2018-09-03         1118
## 25 2014-03-21 2019-03-01 -0,0217 6029,588015  2019-03-01         1241
## 26 2014-03-21 2020-03-01 -0,0228 6031,280520  2020-03-02         1492
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We see that several dates have been correctly adjusted to their following dates and using these new dates the number of business days have been computed.&lt;/p&gt;
&lt;p&gt;The code below computes the theoretical price.
Note that the &lt;code&gt;Quotation&lt;/code&gt; is truncated in 4 digits and the theoretical price in 6.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lft_quot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lft_quot&lt;span class="p"&gt;,&lt;/span&gt; Quotation&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;truncate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; Spread&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;BusinessDays&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
VNA &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;selic&lt;span class="p"&gt;,&lt;/span&gt; VNA&lt;span class="p"&gt;[&lt;/span&gt;Date &lt;span class="o"&gt;==&lt;/span&gt; ref_date&lt;span class="p"&gt;])&lt;/span&gt;
lft_quot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lft_quot&lt;span class="p"&gt;,&lt;/span&gt; TheoPrice&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;truncate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;VNA&lt;span class="o"&gt;*&lt;/span&gt;Quotation&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After all those steps we are able to compare theoretical and spot price.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kp"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;lft_quot&lt;span class="p"&gt;,&lt;/span&gt; SpotPrice&lt;span class="o"&gt;-&lt;/span&gt;TheoPrice&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;## [1] NA
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since the output is &lt;code&gt;TRUE&lt;/code&gt; we all have to agree that these values match.
As I said this is pretty much easy once you know all truncations and roundings that appears along the way.
Another tricky point is that we can't invert that formula analytically, to find out the spread having the spot price of the bond.
Because of the truncations we have to use that algorithm and implement a kind of goal seek mechanism to obtain the spread.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Thu, 03 Apr 2014 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2014-04-03:posts/pricing-brazilian-government-bonds-lft.html</guid><category>R</category><category>brazilian bonds</category><category>LFT</category><category>bizdays</category></item><item><title>Computing EWMA</title><link>http://wilsonfreitas.github.io/posts/computing-ewma.html</link><description>&lt;p&gt;As a loop oriented developer—and long time user of old static typed languages—my first attempt to compute EWMA in R was&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;ewma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rets&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At a first sigh this implementation seemed to be good but from the perspective of an R developer it isn't.
Avoiding loops would be a better.
After a little research I found &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;ewma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;vapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This implementation looked clean and sexy to me and it also reveals the power of &lt;code&gt;*apply&lt;/code&gt; functions.
I decided to evaluate the performance of both implementations in order to find out which one is really the best.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lambda &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0.94&lt;/span&gt;
rets &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0.02&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kp"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ewma.loop&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; lambda&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# user  system elapsed &lt;/span&gt;
&lt;span class="c1"&gt;# 4.075   0.018   4.093 &lt;/span&gt;
&lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kp"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; ewma.func&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; lambda&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# user  system elapsed &lt;/span&gt;
&lt;span class="c1"&gt;# 2.271   0.001   2.272&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The results are amazing.
Using functional approach is, without doubt, much better.
It is almost 2 times better and this is significant.&lt;/p&gt;
&lt;script src="https://gist.github.com/wilsonfreitas/6279978.js"&gt;&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Sun, 18 Aug 2013 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2013-08-18:posts/computing-ewma.html</guid><category>risk management</category><category>volatility</category><category>R</category></item><item><title>EWMA convergence and divergence</title><link>http://wilsonfreitas.github.io/posts/ewma-convergence-and-divergence.html</link><description>&lt;p&gt;The so famous EWMA (Exponentially Weighted Moving Average) model&lt;/p&gt;
&lt;p&gt;$$
\hat\sigma^2_t = \lambda\hat\sigma^2_{t-1} + (1 - \lambda)r^2_t
$$&lt;/p&gt;
&lt;p&gt;used to estimate the volatility of asset returns.
It is extensively used in Risk Management and is in the core of RiskMetrics.
EWMA has a magic parameter $\lambda$ that is $0.94$ in the absolutely great amount of Risk Management Systems running World Wide.
I can't tell if it is JPMorgan's fault or it's one more of those situations where the idiots are taking over, but why $0.94$, why people seem to accept it without have any idea where it came from. (Why so serious.)
But ok, JPM said that and JPM is great, so I see no reason to question that.
However, there is another point which disturbs me more, the well accepted EWMA's &lt;em&gt;period of convergence&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;It is well known, among risk management practioneers, that EWMA with $\lambda=0.94$ has a &lt;em&gt;period of convergence&lt;/em&gt; that is about 60 time steps.
Unfortunately, for some series, you don't have 60 points of historical data and EWMA can't reach its convergence.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Oh! It looks a bad thing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some practioneers usually use a &lt;em&gt;proxy&lt;/em&gt; to fulfill that pre-requisite and that proxy can be any related asset (yeah! a bit heuristic).
Of course I have one question: does it really matters?.
I mean, is it really necessary to use a proxy to have a good estimative of the volatility?
Use no proxy isn't an option?
Or it is operational pre-requisite, the risk management system can't compute the volatility of a time series that doesn't enough historical data to guarantee the convergence its convergence.&lt;/p&gt;
&lt;p&gt;I am going too far and I am afraid my anger on that subject attracts more attention than what really matters: &lt;strong&gt;how many returns are necessary to estimate $\hat\sigma^2_t$?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I don't know the answer and I do think it has no right answer.
I did an experiment in order to try to observe the EWMA's convergence and the results gave me a little hope.&lt;/p&gt;
&lt;h2&gt;Bootstraping time series&lt;/h2&gt;
&lt;p&gt;I picked up PETR4 time series and computed the returns for the year of 2009.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;xts&lt;span class="p"&gt;)&lt;/span&gt;
table.df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PETR4.daily.raw.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; stringsAsFactors&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;table.df&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;table.df&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
prices.df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; table.df&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Adj.Close&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; drop&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
prices.x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; as.xts&lt;span class="p"&gt;(&lt;/span&gt;prices.df&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; order.by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;prices.df&lt;span class="p"&gt;)))&lt;/span&gt;
ret.x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;prices.x&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2009&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
plot&lt;span class="p"&gt;(&lt;/span&gt;prices.x&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2009&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
boxplot&lt;span class="p"&gt;(&lt;/span&gt;coredata&lt;span class="p"&gt;(&lt;/span&gt;ret.x&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The graph below shows time series of prices of PETR4 for the year of 2009—that seemed to be a good year for PETR4.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PETR4 prices" src="http://wilsonfreitas.github.io/figure/prices.png" /&gt;&lt;/p&gt;
&lt;p&gt;To have an idea of how volatile its was in that year I looked at the box plot of returns.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PETR4 returns boxplot" src="http://wilsonfreitas.github.io/figure/boxplot.png" /&gt;&lt;/p&gt;
&lt;p&gt;I put the returns into a matrix because it is easier to work with this structure instead of working with a time series.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rets &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; coredata&lt;span class="p"&gt;(&lt;/span&gt;first&lt;span class="p"&gt;(&lt;/span&gt;ret.x&lt;span class="p"&gt;,&lt;/span&gt; n&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, assuming that the returns are IID I ran a bootstrap computating EWMA for each sample of the time series generated by &lt;code&gt;boot&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;boot&lt;span class="p"&gt;)&lt;/span&gt;
ewma.boot &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;r&lt;span class="p"&gt;,&lt;/span&gt; idx&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    sig.p &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    sig.s &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;vapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;idx&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;i&lt;span class="p"&gt;)&lt;/span&gt; sig.p &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt; sig.p&lt;span class="o"&gt;*&lt;/span&gt;lambda &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;r&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; lambda&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;sig.s&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
lambda &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0.94&lt;/span&gt;
r.ewma.boot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; boot&lt;span class="p"&gt;(&lt;/span&gt;rets&lt;span class="p"&gt;,&lt;/span&gt; statistic&lt;span class="o"&gt;=&lt;/span&gt;ewma.boot&lt;span class="p"&gt;,&lt;/span&gt; R&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the end of the bootstrap process I got a sample of EWMA time series in the variable &lt;code&gt;r.ewma.boot&lt;/code&gt;.
&lt;code&gt;r.ewma.boot&lt;/code&gt; is an instance of the &lt;em&gt;class&lt;/em&gt; &lt;code&gt;boot&lt;/code&gt;, which is returned by the function with the same name.
It has an attribute &lt;code&gt;t&lt;/code&gt; which stores all samples generated by the execution of &lt;code&gt;boot&lt;/code&gt; and other attribute &lt;code&gt;t0&lt;/code&gt; which stores the result for the original time series.
I ran that experiment with $\lambda=0.94$, but it can be run with any other value.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bootstraping EWMA calculations with lambda=0.94" src="http://wilsonfreitas.github.io/figure/bootstrap-lambda94.png" /&gt;&lt;/p&gt;
&lt;p&gt;The red line is the mean volatility and as we can observe, it converges to the long run standard deviation—shown by the black horizontal line.
And, as some practioneers usually say, 60 time steps isn't a bad choice for EWMA's convergence, when $\lambda=0.94$.
For $\lambda=0.98$ we need more time steps to reach the convergence—as can be seen in the image below the time series used has 200 time steps instead of 100.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bootstraping EWMA calculations with lambda=0.98" src="http://wilsonfreitas.github.io/figure/bootstrap-lambda98.png" /&gt;&lt;/p&gt;
&lt;p&gt;We clearly observe the convergence, I tend to believe it is in distribution.
Assintoticaly the mean value of EWMA estimator converges to the sample &lt;code&gt;sd&lt;/code&gt;, but EWMA gives a local estimative of volatility as we observe in the blue line.&lt;/p&gt;
&lt;h2&gt;Simulated time series&lt;/h2&gt;
&lt;p&gt;I extended that experiment for an environment where I could control all variables.
So, following the assumption of IID returns I created one sample of returns and bootstraped it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bootstraping simulated time series with lambda=0.94" src="http://wilsonfreitas.github.io/figure/bootstrap-lambda94-sim.png" /&gt;&lt;/p&gt;
&lt;p&gt;We observe the convergence to the sample &lt;code&gt;sd&lt;/code&gt; which differs a little from the theoretical standard deviation (0.02).
As expected the convergence with $\lambda=0.94$ occurs within the same numbers of time steps we've observed in the real time series.
This result might help confirming the assumption that assets' returns are IID.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="mf"&gt;0.94&lt;/span&gt;
&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nrow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ncol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="mf"&gt;0.02&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;xlab&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ylab&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
    &lt;span class="nx"&gt;xlim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;ylim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.03&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;vapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I am obliged to agree that the &lt;em&gt;market convention&lt;/em&gt; isn't silly.
Indeed, 60 times steps are reasonable for $\lambda=0.94$ as more time steps are made necessary for greater values of $\lambda$.
Though I couldn't validate the use of a proxy for series that don't have this minimal number of points I see that I can't use EWMA without it.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Wilson Freitas</dc:creator><pubDate>Fri, 16 Aug 2013 00:00:00 -0300</pubDate><guid>tag:wilsonfreitas.github.io,2013-08-16:posts/ewma-convergence-and-divergence.html</guid><category>risk management</category><category>volatility</category><category>R</category></item></channel></rss>